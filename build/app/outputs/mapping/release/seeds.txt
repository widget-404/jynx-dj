androidx.window.core.Version: androidx.window.core.Version CURRENT
kotlin.jvm.internal.FunctionReference: boolean equals(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzhh: com.google.android.gms.internal.firebase-auth-api.zzhh zzb
androidx.window.layout.HardwareFoldingFeature$Type$Companion
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivitySaveInstanceState(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.internal.measurement.zzcf,long)
com.google.android.gms.measurement.internal.zzac: android.os.Parcelable$Creator CREATOR
androidx.window.core.Version: int hashCode()
com.onesignal.BootUpReceiver
com.google.android.gms.internal.measurement.zzgc: long zzn
androidx.window.core.Version: androidx.window.core.Version parse(java.lang.String)
kotlin.jvm.internal.Lambda: int arity
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath
com.google.firebase.analytics.FirebaseAnalytics: com.google.firebase.analytics.FirebaseAnalytics getInstance(android.content.Context)
androidx.window.layout.SidecarCompat: androidx.window.sidecar.SidecarInterface getSidecar()
com.onesignal.shortcutbadger.impl.NewHtcHomeBadger: NewHtcHomeBadger()
io.flutter.embedding.engine.FlutterJNI: void nativeMarkTextureFrameAvailable(long,long)
com.google.android.gms.internal.measurement.zzex: com.google.android.gms.internal.measurement.zzex zza
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap getBitmap()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityCreated(com.google.android.gms.dynamic.IObjectWrapper,android.os.Bundle,long)
androidx.core.view.ViewCompat$Api21Impl: void setTranslationZ(android.view.View,float)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable reflected
com.google.android.gms.internal.measurement.zzgc: int zzD
com.google.android.gms.internal.measurement.zzgx: int zze
androidx.loader.app.LoaderManagerImpl$LoaderViewModel
io.flutter.embedding.engine.FlutterJNI: void nativeDestroy(long)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateParentMetricsPredicate(androidx.window.embedding.SplitRule)
com.google.android.gms.internal.measurement.zzex: java.lang.String zzg
androidx.window.layout.SidecarCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
com.google.android.gms.internal.measurement.zzfg: int zze
com.google.android.gms.internal.measurement.zzgc: int zzZ
androidx.work.impl.workers.DiagnosticsWorker: DiagnosticsWorker(android.content.Context,androidx.work.WorkerParameters)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.window.layout.SidecarCompat: void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
com.google.android.gms.auth.api.signin.internal.SignInHubActivity: SignInHubActivity()
androidx.appcompat.widget.DialogTitle
com.google.android.gms.internal.measurement.zzfu: java.lang.String zzf
androidx.window.core.Bounds: Bounds(int,int,int,int)
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
io.flutter.plugin.platform.SingleViewPresentation
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer getCallback()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
androidx.window.R$id: int locale
kotlinx.coroutines.channels.AbstractSendChannel
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setMeasurementEnabled(boolean,long)
kotlinx.coroutines.android.HandlerContext
com.google.android.gms.internal.firebase-auth-api.zzjo
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsQ$window_release(android.app.Activity)
androidx.window.R$attr: int placeholderActivityName
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Class,java.lang.String,java.lang.String,int)
androidx.media.AudioAttributesImplApi21
com.onesignal.JobIntentService$WorkEnqueuer: boolean mHasJobId
io.flutter.plugin.platform.SingleViewPresentation: java.lang.Object createParams
androidx.activity.result.ActivityResult: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
androidx.window.layout.SidecarCompat: SidecarCompat(android.content.Context)
androidx.window.layout.HardwareFoldingFeature$Type
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getConditionalUserProperties(java.lang.String,java.lang.String,com.google.android.gms.internal.measurement.zzcf)
com.google.android.gms.dynamite.descriptors.com.google.firebase.auth.ModuleDescriptor: ModuleDescriptor()
kotlinx.coroutines.internal.LockFreeLinkedListNode
androidx.window.embedding.ExtensionEmbeddingBackend$Companion
com.google.android.gms.internal.firebase-auth-api.zzhn
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] values()
androidx.window.embedding.SplitPlaceholderRule: java.util.Set filters
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype valueOf(java.lang.String)
androidx.window.R$attr: int primaryActivityName
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
com.onesignal.OSSubscriptionState
io.flutter.embedding.engine.FlutterJNI
androidx.window.embedding.SplitRuleParser
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController globalInstance
com.onesignal.OSSMSSubscriptionChangedInternalObserver: void changed(com.onesignal.OSSMSSubscriptionState)
androidx.window.layout.SidecarWindowBackend
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType valueOf(java.lang.String)
android.support.v4.media.session.MediaSessionCompat$QueueItem: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzex: int zzf
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map listenerToActivity
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.gms.internal.firebase-auth-api.zzhw: int zze
androidx.window.layout.SidecarAdapter$Companion: SidecarAdapter$Companion()
com.google.android.gms.internal.measurement.zzgc: int zzR
androidx.window.embedding.ActivityRule: boolean alwaysExpand
androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()
com.google.android.gms.internal.firebase-auth-api.zzkv: com.google.android.gms.internal.firebase-auth-api.zzky zzf
io.flutter.embedding.engine.FlutterJNI: boolean isAttached()
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: java.lang.String MODULE_ID
androidx.cardview.widget.CardView: void setMinimumHeight(int)
com.google.firebase.auth.FirebaseAuthRegistrar: java.util.List getComponents()
io.flutter.plugin.platform.SingleViewPresentation: android.view.View$OnFocusChangeListener focusChangeListener
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack getSecondaryActivityStack()
androidx.window.layout.HardwareFoldingFeature: androidx.window.core.Bounds featureBounds
io.flutter.embedding.engine.FlutterJNI: boolean loadLibraryCalled
com.onesignal.JobIntentService$JobServiceEngineImpl$WrapperWorkItem: JobIntentService$JobServiceEngineImpl$WrapperWorkItem(com.onesignal.JobIntentService$JobServiceEngineImpl,android.app.job.JobWorkItem)
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl splitInfoEmbeddingCallback
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.List lastValue
com.google.android.gms.internal.measurement.zzfw: java.lang.String zzf
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzgj: com.google.android.gms.internal.firebase-auth-api.zzgp zze
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: ImeSyncDeferringInsetsCallback(android.view.View,int,int)
androidx.appcompat.widget.DropDownListView: void setSelectorEnabled(boolean)
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.google.android.gms.signin.internal.zaa: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsetsAnimation$Callback getAnimationCallback()
androidx.core.view.ViewCompat$Api19Impl: boolean isAttachedToWindow(android.view.View)
androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface: void onSplitInfoChanged(java.util.List)
androidx.window.R$attr: int clearTop
androidx.window.embedding.EmbeddingCompat: java.lang.String TAG
com.google.android.gms.common.api.Status: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
androidx.window.layout.DisplayCompatHelperApi28: DisplayCompatHelperApi28()
com.google.firebase.auth.PhoneMultiFactorInfo: android.os.Parcelable$Creator CREATOR
androidx.core.view.ViewCompat$Api28Impl: java.lang.Object requireViewById(android.view.View,int)
io.flutter.embedding.android.FlutterImageView: android.view.Surface getSurface()
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] values()
com.onesignal.JobIntentService$CommandProcessor: void onPostExecute(java.lang.Object)
androidx.activity.result.IntentSenderRequest: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
io.flutter.embedding.engine.FlutterJNI: void dispatchPlatformMessage(java.lang.String,java.nio.ByteBuffer,int,int)
androidx.window.embedding.EmbeddingCompat
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageResponseCallback(long,int,java.nio.ByteBuffer,int)
com.google.firebase.components.ComponentDiscoveryService
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] values()
dev.fluttercommunity.plus.share.ShareFileProvider: ShareFileProvider()
io.flutter.embedding.engine.FlutterJNI: void requestDartDeferredLibrary(int)
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat valueOf(java.lang.String)
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode[] values()
androidx.media.AudioAttributesImplBaseParcelizer: androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.FlutterJNI: long performNativeAttach(io.flutter.embedding.engine.FlutterJNI)
com.onesignal.OSFocusHandler$OnLostFocusWorker: OSFocusHandler$OnLostFocusWorker(android.content.Context,androidx.work.WorkerParameters)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.google.android.gms.internal.firebase-auth-api.zzit
kotlin.coroutines.jvm.internal.SuspendLambda: int getArity()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
com.onesignal.WebViewManager$Position: com.onesignal.WebViewManager$Position valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzvw: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$State getState()
com.google.android.gms.common.util.DynamiteApi
com.google.android.gms.internal.firebase-auth-api.zziy: com.google.android.gms.internal.firebase-auth-api.zzyj zze
com.google.android.gms.internal.firebase-auth-api.zzhz
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
androidx.window.R$id: int androidx_window_activity_scope
io.flutter.embedding.android.FlutterTextureView: void setRenderSurface(android.view.Surface)
androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String description
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: androidx.window.layout.SidecarCompat this$0
androidx.core.view.ViewCompat$Api16Impl: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)
com.google.android.gms.internal.firebase-auth-api.zzju: com.google.android.gms.internal.firebase-auth-api.zzyj zzg
com.google.android.gms.internal.measurement.zzel: com.google.android.gms.internal.measurement.zzel zza
kotlinx.coroutines.CancellableContinuationImpl: int _decision
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int,int)
com.google.android.gms.internal.measurement.zzex: int zze
androidx.cardview.widget.CardView: int getContentPaddingRight()
com.google.android.gms.internal.measurement.zzel: boolean zzh
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logHealthData(int,java.lang.String,com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.dynamic.IObjectWrapper)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.ActivityFilter parseActivityFilter(android.content.Context,android.content.res.XmlResourceParser)
com.google.android.gms.internal.measurement.zzes: boolean zzk
io.flutter.embedding.engine.FlutterJNI: void setRefreshRateFPS(float)
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: SidecarWindowBackend$WindowLayoutChangeCallbackWrapper(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
com.google.android.gms.internal.firebase-auth-api.zzgy: com.google.android.gms.internal.firebase-auth-api.zzgy zzb
androidx.window.core.Version: int compareTo(java.lang.Object)
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation$Companion Companion
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.onesignal.OneSignal$ExternalIdErrorType: com.onesignal.OneSignal$ExternalIdErrorType[] values()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: WindowInfoTrackerImpl$windowLayoutInfo$1(androidx.window.layout.WindowInfoTrackerImpl,android.app.Activity,kotlin.coroutines.Continuation)
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar: java.util.List getComponents()
com.google.android.gms.internal.firebase-auth-api.zzgd: com.google.android.gms.internal.firebase-auth-api.zzgd zzb
com.google.android.gms.internal.measurement.zzjz
androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver
com.onesignal.shortcutbadger.impl.SamsungHomeBadger
com.onesignal.influence.domain.OSInfluenceType: com.onesignal.influence.domain.OSInfluenceType[] values()
com.google.android.gms.internal.firebase-auth-api.zzvy: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onEnd(android.view.WindowInsetsAnimation)
com.onesignal.JobIntentService$JobServiceEngineImpl$WrapperWorkItem
com.google.android.gms.common.api.internal.zzd
androidx.work.ArrayCreatingInputMerger
com.google.android.gms.internal.firebase-auth-api.zzhe: com.google.android.gms.internal.firebase-auth-api.zzyj zzf
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPointerDataPacket(long,java.nio.ByteBuffer,int)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
kotlin.jvm.internal.CallableReference: CallableReference()
androidx.appcompat.widget.AppCompatCheckBox
com.google.android.gms.internal.firebase-auth-api.zzxd: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$200(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.lifecycle.ReportFragment$LifecycleCallbacks
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
androidx.window.embedding.SplitPlaceholderRule: boolean equals(java.lang.Object)
com.google.android.gms.internal.measurement.zzcb: zzcb()
androidx.lifecycle.Lifecycling$1
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
androidx.window.layout.FoldingFeature$OcclusionType$Companion
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext)
com.google.android.gms.internal.firebase-auth-api.zzkm: int zzg
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList splitChangeCallbacks
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
com.onesignal.NotificationOpenedReceiver
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$302(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
com.onesignal.OneSignal$LOG_LEVEL: com.onesignal.OneSignal$LOG_LEVEL[] values()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
androidx.room.MultiInstanceInvalidationService
kotlin.jvm.internal.CallableReference: boolean isFinal()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void accept(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
com.google.android.gms.internal.measurement.zzgc: boolean zzaa
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRect(int,int,int,int)
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcelable)
androidx.window.core.Bounds: boolean isEmpty()
com.google.android.datatransport.cct.CctBackendFactory: com.google.android.datatransport.runtime.backends.TransportBackend create(com.google.android.datatransport.runtime.backends.CreationContext)
com.google.android.gms.common.zzn: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgc: java.lang.String zzF
com.google.android.gms.internal.firebase-auth-api.zzpd: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack
kotlinx.coroutines.android.AndroidDispatcherFactory: int getLoadPriority()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.sidecar.SidecarDeviceState lastDeviceState
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.Set registeredListeners
androidx.core.view.ViewCompat$Api19Impl: void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void accept(androidx.window.extensions.layout.WindowLayoutInfo)
com.onesignal.OSSubscriptionChangedInternalObserver: void changed(com.onesignal.OSSubscriptionState)
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.gms.internal.measurement.zzgc: java.lang.String zzM
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.onesignal.shortcutbadger.impl.AdwHomeBadger
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock globalLock
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTriggerTimeout
androidx.fragment.app.FragmentContainerView: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: java.util.concurrent.locks.ReentrantLock lock
com.google.android.gms.internal.measurement.zzgq: com.google.android.gms.internal.measurement.zzgq zza
androidx.core.content.ContextCompat$Api24Impl: boolean isDeviceProtectedStorage(android.content.Context)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.window.R$id: int ltr
androidx.window.core.Version: java.lang.String toString()
androidx.work.impl.foreground.SystemForegroundService
androidx.core.view.ViewCompat$Api29Impl: android.view.View$AccessibilityDelegate getAccessibilityDelegate(android.view.View)
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
com.onesignal.flutter.OneSignalPlugin: void onOSPermissionChanged(com.onesignal.OSPermissionStateChanges)
androidx.core.graphics.drawable.IconCompat
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzeh: int zze
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.concurrent.locks.ReentrantLock multicastConsumerLock
com.onesignal.shortcutbadger.impl.HuaweiHomeBadger
kotlinx.coroutines.android.AndroidDispatcherFactory: java.lang.String hintOnError()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
io.flutter.embedding.engine.FlutterJNI: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
com.google.android.gms.internal.firebase-auth-api.zzlj: java.lang.String zze
com.google.android.gms.internal.firebase-auth-api.zzjx: int zze
com.google.android.gms.internal.measurement.zzfe: com.google.android.gms.internal.measurement.zzkj zzo
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgc: java.lang.String zzz
androidx.window.layout.ActivityCompatHelperApi30: android.graphics.Rect currentWindowBounds(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifierBase(int)
com.onesignal.JobIntentService$JobServiceEngineImpl$WrapperWorkItem: com.onesignal.JobIntentService$JobServiceEngineImpl this$0
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
kotlinx.coroutines.ChildHandleNode
com.google.android.gms.internal.firebase-auth-api.zzlp
androidx.window.embedding.SplitRule$Api30Impl: SplitRule$Api30Impl()
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack primaryActivityStack
com.google.android.gms.internal.measurement.zzgl
com.google.android.gms.internal.measurement.zzbn: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
androidx.window.layout.SidecarCompat$DistinctElementCallback: java.util.WeakHashMap activityWindowLayoutInfo
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
com.google.android.gms.internal.firebase-auth-api.zzie: com.google.android.gms.internal.firebase-auth-api.zzkf zze
androidx.window.layout.WindowInfoTrackerImpl$Companion
androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy[] values()
io.flutter.embedding.engine.FlutterJNI: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
androidx.window.R$attr: int secondaryActivityName
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
androidx.window.embedding.EmbeddingBackend: void unregisterSplitListenerForActivity(androidx.core.util.Consumer)
com.google.android.gms.internal.firebase-auth-api.zzhk: com.google.android.gms.internal.firebase-auth-api.zzyj zzf
androidx.core.view.ViewCompat$Api19Impl: void setAccessibilityLiveRegion(android.view.View,int)
com.google.android.gms.internal.measurement.zzgh: com.google.android.gms.internal.measurement.zzki zzf
androidx.window.embedding.SplitPlaceholderRule: int hashCode()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.sidecar.SidecarInterface$SidecarCallback callbackInterface
androidx.work.WorkManagerInitializer
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthRegistrar
com.google.android.gms.internal.measurement.zzel: com.google.android.gms.internal.measurement.zzex zzf
androidx.window.R$styleable: int ActivityFilter_activityName
com.google.android.gms.internal.firebase-auth-api.zzle: java.lang.String zze
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setDataCollectionEnabled(boolean)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo lastInfo
com.google.android.gms.internal.measurement.zzgj
com.google.android.gms.internal.firebase-auth-api.zzin: com.google.android.gms.internal.firebase-auth-api.zziq zzf
kotlinx.coroutines.JobNode
io.flutter.embedding.engine.FlutterJNI: void dispatchEmptyPlatformMessage(java.lang.String,int)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setDefaultEventParameters(android.os.Bundle)
androidx.window.embedding.SplitController: boolean sDebug
com.google.android.gms.measurement.AppMeasurement: java.lang.String getAppInstanceId()
androidx.fragment.app.FragmentManagerViewModel
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1 INSTANCE
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.StackTraceElement getStackTraceElement()
androidx.window.R$styleable: int[] SplitPairRule
androidx.core.view.ViewCompat$Api17Impl: boolean isPaddingRelative(android.view.View)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
kotlinx.coroutines.EventLoopImplBase
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: android.app.Activity $activity
androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence mContentTitle
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
com.google.android.gms.common.internal.RootTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.SplitPairRule: boolean finishPrimaryWithSecondary
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: ModuleDescriptor()
kotlinx.coroutines.CancellableContinuationImpl
com.jynxdj.dev.MainActivity
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type HINGE
com.google.android.gms.internal.measurement.zzfs: long zzi
com.google.android.gms.internal.measurement.zzel: int zze
androidx.window.embedding.SplitController: void removeSplitListener(androidx.core.util.Consumer)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
com.onesignal.NotificationDismissReceiver: NotificationDismissReceiver()
com.google.android.gms.internal.measurement.zzjz: com.google.android.gms.internal.measurement.zzjt zza
androidx.appcompat.widget.SearchView
androidx.work.BackoffPolicy: androidx.work.BackoffPolicy[] values()
com.onesignal.ADMMessageHandlerJob: void onRegistered(android.content.Context,java.lang.String)
com.google.android.gms.internal.measurement.zzgc: java.lang.String zzI
com.onesignal.JobIntentService$WorkEnqueuer: void serviceProcessingFinished()
com.google.android.gms.internal.measurement.zzfm: java.lang.String zzh
com.onesignal.FCMBroadcastReceiver
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$0
androidx.window.embedding.EmbeddingCompat: EmbeddingCompat()
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_0_1()
androidx.window.embedding.EmbeddingInterfaceCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)
androidx.window.layout.WindowLayoutInfo: WindowLayoutInfo(java.util.List)
com.onesignal.OSNotificationAction$ActionType: com.onesignal.OSNotificationAction$ActionType valueOf(java.lang.String)
androidx.work.OutOfQuotaPolicy: androidx.work.OutOfQuotaPolicy[] values()
io.flutter.embedding.engine.FlutterJNI: void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
androidx.appcompat.widget.SearchView: int getMaxWidth()
androidx.work.impl.WorkDatabase_Impl: WorkDatabase_Impl()
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
androidx.core.view.ViewCompat$Api21Impl: float getElevation(android.view.View)
kotlinx.coroutines.CompletedExceptionally: int _handled
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateIntentPredicates(java.util.Set)
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status valueOf(java.lang.String)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
com.google.firebase.auth.GithubAuthCredential: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] values()
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformView getView()
androidx.window.embedding.SplitInfo
com.google.android.gms.internal.measurement.zzfw: long zzh
com.google.android.gms.signin.internal.zak: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.MatcherUtils
com.onesignal.JobIntentService$GenericWorkItem
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
kotlinx.coroutines.InvokeOnCompletion
com.onesignal.flutter.OneSignalPlugin: void onOSSubscriptionChanged(com.onesignal.OSSubscriptionStateChanges)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void removeListener(androidx.core.util.Consumer)
com.onesignal.shortcutbadger.impl.NovaHomeBadger: NovaHomeBadger()
androidx.core.app.RemoteActionCompatParcelizer
androidx.window.layout.ExtensionInterfaceCompat: void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
androidx.window.core.ExperimentalWindowApi
androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getFOLD()
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.cardview.widget.CardView: boolean getPreventCornerOverlap()
android.support.v4.media.MediaBrowserCompat$MediaItem
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.JobSupport: java.lang.Object _state
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void updateTexImage()
com.google.android.gms.internal.measurement.zzfc: com.google.android.gms.internal.measurement.zzfc zza
com.onesignal.OneSignal$AppEntryAction: com.onesignal.OneSignal$AppEntryAction valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api16Impl: int getMinimumHeight(android.view.View)
androidx.window.embedding.MatcherUtils: java.lang.String sMatchersTag
androidx.appcompat.widget.Toolbar: void setTitle(int)
com.google.android.gms.internal.measurement.zzfe: com.google.android.gms.internal.measurement.zzkj zzi
androidx.savedstate.Recreator
androidx.window.layout.SidecarWindowBackend$Companion: androidx.window.layout.ExtensionInterfaceCompat initAndVerifyExtension(android.content.Context)
androidx.window.core.Bounds: int getTop()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
com.google.android.gms.internal.measurement.zzfo: com.google.android.gms.internal.measurement.zzgh zzg
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper
io.flutter.embedding.engine.FlutterJNI: void onSurfaceWindowChanged(android.view.Surface)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: boolean prefetchDefaultFontManagerCalled
androidx.window.layout.SidecarAdapter$Companion: SidecarAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
androidx.appcompat.widget.ButtonBarLayout
androidx.window.embedding.SplitPairFilter: SplitPairFilter(android.content.ComponentName,android.content.ComponentName,java.lang.String)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzju: com.google.android.gms.internal.measurement.zzju[] values()
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$602(io.flutter.embedding.android.FlutterSplashView$SavedState,java.lang.String)
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar: FlutterFirebaseCoreRegistrar()
androidx.lifecycle.SavedStateHandleController$OnRecreation: SavedStateHandleController$OnRecreation()
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object)
androidx.window.layout.FoldingFeature$OcclusionType: java.lang.String description
androidx.core.view.ViewCompat$Api16Impl: void setImportantForAccessibility(android.view.View,int)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
io.flutter.embedding.android.FlutterView: void setWindowInfoListenerDisplayFeatures(androidx.window.layout.WindowLayoutInfo)
androidx.window.embedding.SplitRule: float splitRatio
com.google.android.gms.internal.measurement.zzgh: com.google.android.gms.internal.measurement.zzkj zzh
androidx.window.layout.HardwareFoldingFeature: int hashCode()
io.flutter.embedding.engine.FlutterJNI: void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
androidx.appcompat.app.AppCompatActivity
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState state
androidx.window.core.Bounds: int hashCode()
com.onesignal.shortcutbadger.impl.ApexHomeBadger
androidx.appcompat.widget.ScrollingTabContainerView: void setContentHeight(int)
com.google.android.gms.internal.firebase-auth-api.zzws: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int)
com.google.android.gms.internal.firebase-auth-api.zzpb: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzor: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
androidx.window.layout.WindowInfoTracker$Companion: void overrideDecorator(androidx.window.layout.WindowInfoTrackerDecorator)
com.onesignal.OSFocusHandler$OnLostFocusWorker
com.onesignal.FCMIntentService
android.support.v4.media.MediaBrowserCompat$ItemReceiver
com.google.android.gms.internal.firebase-auth-api.zznx: android.os.Parcelable$Creator CREATOR
androidx.window.layout.ExtensionWindowLayoutInfoBackend: ExtensionWindowLayoutInfoBackend(androidx.window.extensions.layout.WindowLayoutComponent)
android.support.v4.app.RemoteActionCompatParcelizer
com.google.android.gms.internal.measurement.zzgj: int zze
com.google.android.gms.internal.firebase-auth-api.zzfx: com.google.android.gms.internal.firebase-auth-api.zzgd zzg
kotlinx.coroutines.scheduling.LimitingDispatcher: int inFlightTasks
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.core.view.ViewCompat$Api21Impl: void setTransitionName(android.view.View,java.lang.String)
androidx.window.layout.SidecarWindowBackend: void setWindowExtension(androidx.window.layout.ExtensionInterfaceCompat)
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
com.google.android.gms.internal.measurement.zzgc: boolean zzG
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.String toString()
androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface
androidx.window.embedding.SplitPlaceholderRule: android.content.Intent getPlaceholderIntent()
androidx.window.embedding.SplitController: void access$setStaticSplitRules(androidx.window.embedding.SplitController,java.util.Set)
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
androidx.window.core.Bounds: boolean isZero()
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
com.google.android.gms.internal.firebase-auth-api.zzlj: com.google.android.gms.internal.firebase-auth-api.zzlj zzb
com.google.android.gms.internal.firebase-auth-api.zzjd: int zze
androidx.work.impl.background.systemjob.SystemJobService
com.google.firebase.auth.internal.GenericIdpActivity
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
androidx.window.embedding.EmbeddingCompat$Companion: boolean isEmbeddingAvailable()
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchSemanticsAction(long,int,int,java.nio.ByteBuffer,int)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack getPrimaryActivityStack()
androidx.window.layout.SidecarAdapter: androidx.window.layout.SidecarAdapter$Companion Companion
com.google.android.gms.internal.firebase-auth-api.zzox: android.os.Parcelable$Creator CREATOR
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
androidx.window.layout.WindowInfoTrackerImpl: WindowInfoTrackerImpl(androidx.window.layout.WindowMetricsCalculator,androidx.window.layout.WindowBackend)
androidx.core.view.ViewCompat$Api17Impl: int getPaddingEnd(android.view.View)
androidx.window.embedding.SplitController$Companion: SplitController$Companion()
androidx.window.embedding.ActivityFilter: boolean equals(java.lang.Object)
androidx.window.embedding.EmbeddingCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)
com.google.android.gms.auth.api.signin.RevocationBoundService: RevocationBoundService()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedFling(android.view.View,float,float,boolean)
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.gms.common.Feature: android.os.Parcelable$Creator CREATOR
androidx.work.impl.workers.DiagnosticsWorker
androidx.core.view.ViewCompat$Api16Impl: void requestFitSystemWindows(android.view.View)
com.google.android.gms.internal.firebase-auth-api.zzkm: int zzf
androidx.work.OverwritingInputMerger: OverwritingInputMerger()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] values()
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
com.google.android.gms.internal.measurement.zzgc: com.google.android.gms.internal.measurement.zzgf zzT
com.google.android.gms.internal.firebase-auth-api.zzxt: int zza
com.google.android.gms.internal.firebase-auth-api.zzjx
com.google.android.gms.internal.firebase-auth-api.zzkr: int zzf
com.google.android.gms.internal.measurement.zzfs: long zzh
com.google.android.gms.internal.firebase-auth-api.zzlb: com.google.android.gms.internal.firebase-auth-api.zzlb zzb
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.media.AudioAttributesImplApi21Parcelizer: void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel)
androidx.window.R$styleable: int SplitPairRule_clearTop
com.google.android.gms.internal.measurement.zzfy: java.lang.String zzg
androidx.window.embedding.SplitPairFilter: boolean matchesActivityPair(android.app.Activity,android.app.Activity)
androidx.window.layout.DisplayCompatHelperApi17: void getRealSize(android.view.Display,android.graphics.Point)
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
androidx.window.embedding.SplitPairFilter: int hashCode()
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: androidx.window.layout.SidecarWindowBackend this$0
com.google.firebase.iid.FirebaseInstanceIdReceiver
com.google.android.gms.common.internal.ReflectedParcelable
io.flutter.embedding.engine.FlutterJNI: void cleanupMessageData(long)
androidx.window.layout.FoldingFeature$State: java.lang.String description
androidx.window.layout.WindowLayoutInfo: boolean equals(java.lang.Object)
androidx.window.R$styleable: int SplitPlaceholderRule_splitRatio
com.onesignal.NotificationOpenedReceiverBase: NotificationOpenedReceiverBase()
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
androidx.window.layout.WindowInfoTracker: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
com.google.android.gms.dynamite.descriptors.com.google.firebase.auth.ModuleDescriptor: int MODULE_VERSION
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundResource(int)
com.google.android.gms.internal.measurement.zzeq: java.lang.String zzi
com.onesignal.JobIntentService$CompatJobEngine: android.os.IBinder compatGetBinder()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.dart.PlatformMessageHandler platformMessageHandler
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.window.layout.HardwareFoldingFeature$Companion: HardwareFoldingFeature$Companion()
androidx.core.view.ViewCompat$Api29Impl: void setSystemGestureExclusionRects(android.view.View,java.util.List)
com.onesignal.JobIntentService$ComponentNameWithWakeful: boolean useWakefulService
androidx.appcompat.widget.AppCompatToggleButton: android.content.res.ColorStateList getSupportBackgroundTintList()
io.flutter.plugins.GeneratedPluginRegistrant: void registerWith(io.flutter.embedding.engine.FlutterEngine)
androidx.window.embedding.SplitRule: int getLayoutDirection()
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
androidx.core.view.ViewCompat$Api17Impl: android.view.Display getDisplay(android.view.View)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterOverlaySurface: int id
com.google.android.gms.internal.measurement.zzil: int zzb
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void clearConditionalUserProperty(java.lang.String,java.lang.String,android.os.Bundle)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: android.app.Activity activity
androidx.window.layout.FoldingFeature$State
com.google.android.gms.common.zzq: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzes: boolean zzi
io.flutter.embedding.android.FlutterSurfaceView
com.google.android.gms.safetynet.zzf: android.os.Parcelable$Creator CREATOR
com.onesignal.JobIntentService$CompatWorkItem: void complete()
androidx.window.embedding.SplitPairRule: int hashCode()
com.onesignal.shortcutbadger.impl.ApexHomeBadger: ApexHomeBadger()
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.Object mValue
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmoji(int)
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1(androidx.window.layout.SidecarCompat,android.app.Activity)
androidx.window.layout.WindowInfoTracker: androidx.window.layout.WindowInfoTracker$Companion Companion
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
com.google.android.gms.internal.firebase-auth-api.zzin: int zze
com.google.android.gms.internal.firebase-auth-api.zzwq: android.os.Parcelable$Creator CREATOR
com.onesignal.OSReceiveReceiptController$ReceiveReceiptWorker: OSReceiveReceiptController$ReceiveReceiptWorker(android.content.Context,androidx.work.WorkerParameters)
androidx.work.OverwritingInputMerger
androidx.window.core.Version
androidx.window.R$attr: R$attr()
io.flutter.view.AccessibilityViewEmbedder: android.util.SparseArray flutterIdToOrigin
com.google.android.gms.internal.measurement.zzgc: com.google.android.gms.internal.measurement.zzkj zzj
com.google.android.gms.internal.firebase-auth-api.zzkr
androidx.window.embedding.ActivityRule: int hashCode()
androidx.window.embedding.EmbeddingCompat$Companion: androidx.window.extensions.embedding.ActivityEmbeddingComponent embeddingComponent()
io.flutter.embedding.engine.FlutterJNI: void updateJavaAssetManager(android.content.res.AssetManager,java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityResumed(com.google.android.gms.dynamic.IObjectWrapper,long)
com.google.android.gms.internal.firebase-auth-api.zzgy: com.google.android.gms.internal.firebase-auth-api.zzhb zze
com.google.android.gms.internal.measurement.zzeh
io.flutter.embedding.engine.FlutterJNI: FlutterJNI()
androidx.window.layout.WindowBackend
androidx.core.view.ViewCompat$Api20Impl: void requestApplyInsets(android.view.View)
com.google.android.gms.internal.firebase-auth-api.zziy
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void addWindowLayoutInfoListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.window.embedding.SplitInfo: float getSplitRatio()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void isDataCollectionEnabled(com.google.android.gms.internal.measurement.zzcf)
com.google.firebase.auth.zze: android.os.Parcelable$Creator CREATOR
com.onesignal.BootUpReceiver: BootUpReceiver()
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation)
com.google.android.gms.internal.firebase-auth-api.zzgm: com.google.android.gms.internal.firebase-auth-api.zzgm zzb
com.onesignal.JobIntentService$WorkEnqueuer: JobIntentService$WorkEnqueuer(android.content.ComponentName)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
androidx.window.embedding.EmbeddingTranslatingCallback: androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface callback
com.google.android.gms.internal.measurement.zzfe: java.lang.String zzg
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmoji(int)
androidx.window.layout.SidecarCompat$Companion: SidecarCompat$Companion()
com.google.android.gms.internal.firebase-auth-api.zzkn: int zze
com.google.android.gms.internal.measurement.zzfi: java.lang.String zzg
io.flutter.embedding.engine.FlutterJNI: void onPreEngineRestart()
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$700(io.flutter.embedding.android.FlutterSplashView$SavedState)
com.onesignal.ADMMessageHandlerJob: void onRegistrationError(android.content.Context,java.lang.String)
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
com.google.android.gms.internal.measurement.zzfe: com.google.android.gms.internal.measurement.zzkj zzj
androidx.appcompat.widget.AbsActionBarView: int getAnimatedVisibility()
com.onesignal.ADMMessageHandler: int JOB_ID
com.google.android.gms.internal.firebase-auth-api.zzacl: com.google.android.gms.internal.firebase-auth-api.zzacl[] values()
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: WindowMetricsCalculator$Companion$reset$1()
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1
androidx.browser.browseractions.BrowserActionsFallbackMenuView: BrowserActionsFallbackMenuView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
com.google.android.gms.internal.firebase-auth-api.zzjj
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void removeListener(androidx.core.util.Consumer)
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType FULL
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void clearMeasurementEnabled(long)
com.google.firebase.auth.PhoneAuthCredential: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] values()
androidx.core.content.ContextCompat$Api24Impl: java.io.File getDataDir(android.content.Context)
io.flutter.embedding.engine.FlutterJNI: android.os.Looper mainLooper
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessage(java.lang.String,java.nio.ByteBuffer,int,long)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.google.android.gms.internal.measurement.zzeq: java.lang.String zzh
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
androidx.window.R$styleable: int SplitPairRule_splitMinSmallestWidth
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeSetAccessibilityFeatures(long,int)
com.google.android.gms.auth.api.credentials.IdToken: android.os.Parcelable$Creator CREATOR
com.google.firebase.FirebaseCommonRegistrar: FirebaseCommonRegistrar()
com.onesignal.OneSignal$ExternalIdErrorType: com.onesignal.OneSignal$ExternalIdErrorType valueOf(java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onPrepare(android.view.WindowInsetsAnimation)
io.flutter.embedding.engine.FlutterJNI: void deferredComponentInstallFailure(int,java.lang.String,boolean)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: androidx.window.embedding.ExtensionEmbeddingBackend this$0
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity)
com.google.android.gms.measurement.AppMeasurementJobService: AppMeasurementJobService()
com.google.android.gms.internal.firebase-auth-api.zzgm: int zze
com.google.android.gms.internal.measurement.zzgc: java.lang.String zzE
com.google.android.gms.internal.firebase-auth-api.zzwn: android.os.Parcelable$Creator CREATOR
com.onesignal.FocusTimeController$FocusEventType: com.onesignal.FocusTimeController$FocusEventType[] values()
androidx.window.embedding.SplitController: void setStaticSplitRules(java.util.Set)
com.google.firebase.iid.FirebaseInstanceIdReceiver: FirebaseInstanceIdReceiver()
androidx.window.embedding.EmbeddingAdapter: androidx.window.embedding.SplitInfo translate(androidx.window.extensions.embedding.SplitInfo)
androidx.fragment.app.FragmentContainerView: void setLayoutTransition(android.animation.LayoutTransition)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature valueOf(java.lang.String)
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State FLAT
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
com.onesignal.shortcutbadger.impl.NovaHomeBadger
com.google.firebase.messaging.FirebaseMessagingRegistrar: java.util.List getComponents()
com.onesignal.JobIntentService$CompatWorkItem: int mStartId
androidx.window.layout.FoldingFeature$State: FoldingFeature$State(java.lang.String)
dev.fluttercommunity.plus.share.ShareFileProvider
io.flutter.embedding.engine.FlutterJNI: boolean getIsSoftwareRenderingEnabled()
androidx.appcompat.widget.SearchView: int getImeOptions()
androidx.core.app.AppOpsManagerCompat$Api29Impl: int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String)
android.support.v4.media.session.PlaybackStateCompat$CustomAction
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status[] values()
kotlin.jvm.internal.FunctionReference: int flags
com.onesignal.OneSignal$PromptActionResult: com.onesignal.OneSignal$PromptActionResult valueOf(java.lang.String)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.gms.internal.measurement.zzej: com.google.android.gms.internal.measurement.zzeq zzj
io.flutter.embedding.engine.FlutterJNI: void setViewportMetrics(float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
com.google.android.gms.internal.firebase-auth-api.zzhq
com.onesignal.WebViewManager$OSJavaScriptInterface: void postMessage(java.lang.String)
androidx.window.layout.SidecarWindowBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.onesignal.JobIntentService$CommandProcessor
com.onesignal.OSPermissionChangedInternalObserver: void changed(com.onesignal.OSPermissionState)
androidx.fragment.app.FragmentContainerView
kotlin.jvm.internal.FunctionReference: int hashCode()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void remove()
androidx.window.embedding.EmbeddingAdapter: java.lang.Object component1(android.util.Pair)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityPredicates(java.util.Set)
com.google.android.gms.internal.measurement.zzfa: java.lang.String zzf
androidx.appcompat.widget.DropDownListView: void setSelector(android.graphics.drawable.Drawable)
androidx.window.R$styleable: int SplitPlaceholderRule_placeholderActivityName
kotlinx.coroutines.channels.RendezvousChannel
com.google.android.gms.internal.firebase-auth-api.zzga: com.google.android.gms.internal.firebase-auth-api.zzga zzb
androidx.appcompat.widget.AbsActionBarView: int getContentHeight()
androidx.window.layout.WindowMetricsCalculatorCompat: int getNavigationBarHeight(android.content.Context)
com.onesignal.PermissionsActivity: PermissionsActivity()
com.google.android.gms.internal.firebase-auth-api.zzga
com.google.android.gms.internal.measurement.zzeq: com.google.android.gms.internal.measurement.zzeq zza
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader
androidx.media.AudioAttributesCompatParcelizer
androidx.window.core.Version$Companion: Version$Companion()
androidx.window.layout.ActivityCompatHelperApi30
com.onesignal.JobIntentService$JobServiceEngineImpl: com.onesignal.JobIntentService mService
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
androidx.window.R$attr: int secondaryActivityAction
androidx.window.embedding.SplitPairRule
androidx.core.view.ViewCompat$Api16Impl: android.view.ViewParent getParentForAccessibility(android.view.View)
com.google.android.gms.internal.firebase-auth-api.zzxf: android.os.Parcelable$Creator CREATOR
com.onesignal.NotificationOpenedActivityHMS: NotificationOpenedActivityHMS()
androidx.cardview.widget.CardView: float getMaxCardElevation()
io.flutter.plugins.GeneratedPluginRegistrant: java.lang.String TAG
androidx.window.core.Version: int getPatch()
com.onesignal.FCMIntentJobService: FCMIntentJobService()
com.google.android.gms.measurement.AppMeasurementService: AppMeasurementService()
com.google.android.gms.internal.firebase-auth-api.zzol: android.os.Parcelable$Creator CREATOR
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
androidx.window.embedding.SplitRule: int getMinWidth()
com.google.firebase.auth.FirebaseAuth
com.google.android.gms.internal.firebase-auth-api.zzlm: com.google.android.gms.internal.firebase-auth-api.zzyj zzf
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1
com.google.android.gms.internal.measurement.zzfo: boolean zzi
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowBackend windowBackend
androidx.window.embedding.SplitRule: int layoutDirection
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation valueOf(java.lang.String)
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
com.onesignal.NotificationOpenedActivityHMS
io.flutter.plugins.urllauncher.WebViewActivity: WebViewActivity()
androidx.core.widget.EdgeEffectCompat$Api31Impl: android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet)
com.google.firebase.auth.FirebaseAuth: com.google.firebase.auth.FirebaseAuth getInstance()
com.onesignal.JobIntentService$CompatWorkEnqueuer: boolean mLaunchingService
androidx.window.layout.DisplayFeature
com.google.android.gms.internal.firebase-auth-api.zziq: int zze
com.google.android.gms.auth.api.credentials.CredentialPickerConfig: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzzm: java.util.Map zzb
com.google.android.gms.internal.measurement.zzfi
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$Api17Impl: void setLayerPaint(android.view.View,android.graphics.Paint)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: ExtensionEmbeddingBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.onesignal.shortcutbadger.impl.DefaultBadger
kotlin.jvm.internal.Lambda: java.lang.String toString()
androidx.window.layout.SidecarCompat: void register(android.os.IBinder,android.app.Activity)
androidx.window.layout.WindowInfoTrackerImpl
androidx.window.R$id: R$id()
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
com.google.android.gms.internal.measurement.zzfq: int zze
com.onesignal.JobIntentService$JobWorkEnqueuer: android.app.job.JobInfo mJobInfo
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
androidx.window.embedding.ActivityStack: ActivityStack(java.util.List,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.jynxdj.dev.MainActivity: MainActivity()
com.google.android.gms.internal.measurement.zzgq
androidx.work.impl.utils.futures.AbstractFuture$Waiter: java.lang.Thread thread
androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.media.AudioAttributesImplBaseParcelizer: AudioAttributesImplBaseParcelizer()
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object)
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
io.flutter.embedding.engine.FlutterJNI: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
com.google.android.gms.internal.measurement.zzfo: com.google.android.gms.internal.measurement.zzgh zzh
androidx.fragment.app.Fragment: Fragment()
com.google.android.gms.internal.firebase-auth-api.zzgd
com.onesignal.shortcutbadger.impl.OPPOHomeBader
com.google.android.gms.internal.measurement.zzgq: java.lang.String zzf
kotlinx.coroutines.channels.ArrayChannel
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype[] values()
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int,kotlin.coroutines.Continuation)
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
com.onesignal.JobIntentService$CommandProcessor: java.lang.Object doInBackground(java.lang.Object[])
androidx.room.MultiInstanceInvalidationService: MultiInstanceInvalidationService()
com.google.android.gms.cloudmessaging.CloudMessagingReceiver: CloudMessagingReceiver()
com.onesignal.JobIntentService$CommandProcessor: void onCancelled(java.lang.Object)
com.google.android.gms.internal.measurement.zzgc: java.lang.String zzs
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
androidx.appcompat.widget.AppCompatRadioButton: int getCompoundPaddingLeft()
androidx.window.R$attr: int splitMinWidth
androidx.window.layout.SidecarAdapter$Companion: void setSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState,int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets lastWindowInsets
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getGmpAppId(com.google.android.gms.internal.measurement.zzcf)
com.google.android.gms.internal.firebase-auth-api.zzwj: android.os.Parcelable$Creator CREATOR
com.google.android.gms.measurement.AppMeasurement: void setConditionalUserProperty(com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty)
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
androidx.window.embedding.ExtensionEmbeddingBackend: java.lang.String TAG
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat embeddingExtension
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
com.google.android.gms.internal.measurement.zzfe: int zzh
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
androidx.media.AudioAttributesImplApi21Parcelizer: androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel)
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1
androidx.window.core.Version: int compareTo(androidx.window.core.Version)
com.google.android.gms.auth.api.signin.GoogleSignInAccount: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgl: java.lang.String zzg
androidx.window.layout.HardwareFoldingFeature: android.graphics.Rect getBounds()
com.google.android.gms.auth.api.credentials.HintRequest: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness valueOf(java.lang.String)
com.google.android.gms.measurement.internal.zzq: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.SplitController: java.util.Set staticSplitRules
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] values()
com.onesignal.OSSubscriptionChangedInternalObserver
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.datatransport.cct.CctBackendFactory: CctBackendFactory()
com.google.android.gms.internal.firebase-auth-api.zzpn: android.os.Parcelable$Creator CREATOR
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag[] values()
io.flutter.embedding.engine.FlutterJNI: void asyncWaitForVsync(long)
com.google.android.gms.internal.measurement.zzeh: com.google.android.gms.internal.measurement.zzkj zzg
com.onesignal.JobIntentService$CompatWorkEnqueuer: android.os.PowerManager$WakeLock mRunWakeLock
com.google.firebase.messaging.reporting.MessagingClientEvent$Event: com.google.firebase.messaging.reporting.MessagingClientEvent$Event valueOf(java.lang.String)
androidx.window.embedding.ExtensionEmbeddingBackend: boolean isSplitSupported()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$402(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.WindowInsets)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
androidx.cardview.widget.CardView: int getContentPaddingBottom()
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList getWindowLayoutChangeCallbacks()
com.onesignal.shortcutbadger.impl.SonyHomeBadger: SonyHomeBadger()
androidx.window.embedding.ActivityFilter
com.google.android.gms.internal.measurement.zzfw: double zzj
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List getLastInfo()
com.google.android.gms.internal.measurement.zzel
androidx.media.AudioAttributesImplApi21Parcelizer: AudioAttributesImplApi21Parcelizer()
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackLibraryPath
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$Companion Companion
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface getSurface()
kotlin.coroutines.jvm.internal.SuspendLambda: int arity
androidx.window.embedding.SplitRuleParser: android.content.ComponentName buildClassName(java.lang.String,java.lang.CharSequence)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setMinimumSessionDuration(long)
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat getEmbeddingExtension()
androidx.window.layout.WindowMetricsCalculatorCompat: void getRectSizeFromDisplay(android.app.Activity,android.graphics.Rect)
com.onesignal.ADMMessageHandler: void onRegistered(java.lang.String)
io.flutter.view.AccessibilityViewEmbedder: void copyAccessibilityFields(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeInfo)
androidx.window.core.Version: androidx.window.core.Version$Companion Companion
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Point getRealSizeForDisplay$window_release(android.view.Display)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: androidx.window.layout.WindowInfoTrackerImpl this$0
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status[] values()
com.google.android.gms.internal.measurement.zzej: boolean zzk
androidx.window.layout.WindowLayoutInfo: java.util.List getDisplayFeatures()
androidx.window.embedding.SplitPairFilter: boolean matchesActivityIntentPair(android.app.Activity,android.content.Intent)
androidx.window.embedding.EmbeddingRule: EmbeddingRule()
android.support.v4.graphics.drawable.IconCompatParcelizer
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
androidx.window.R$styleable: int SplitPairRule_splitLayoutDirection
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsIceCreamSandwich$window_release(android.app.Activity)
androidx.activity.ComponentActivity$3
androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock globalLock
androidx.work.impl.WorkDatabase_Impl
androidx.appcompat.widget.AppCompatAutoCompleteTextView
com.google.android.gms.internal.measurement.zzeh: com.google.android.gms.internal.measurement.zzeh zza
androidx.work.impl.background.systemalarm.ConstraintProxy$NetworkStateProxy
androidx.window.embedding.EmbeddingAdapter
com.google.android.gms.internal.measurement.zzeq
androidx.appcompat.widget.FitWindowsLinearLayout
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType[] values()
kotlin.jvm.internal.CallableReference: java.util.List getAnnotations()
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
com.google.android.gms.common.SupportErrorDialogFragment: SupportErrorDialogFragment()
com.onesignal.JobIntentService$WorkEnqueuer: void enqueueWork(android.content.Intent)
androidx.window.layout.FoldingFeature$State$Companion
com.google.android.gms.internal.firebase-auth-api.zzhe
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
androidx.window.embedding.EmptyEmbeddingComponent: void setEmbeddingRules(java.util.Set)
androidx.window.embedding.EmptyEmbeddingComponent: void setSplitInfoCallback(java.util.function.Consumer)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void endAdUnitExposure(java.lang.String,long)
io.flutter.embedding.android.FlutterSplashView$SavedState
com.google.firebase.auth.internal.zzp: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
androidx.appcompat.widget.FitWindowsFrameLayout
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConsent(android.os.Bundle,long)
androidx.window.R$styleable: R$styleable()
androidx.window.layout.ActivityCompatHelperApi24: androidx.window.layout.ActivityCompatHelperApi24 INSTANCE
kotlin.jvm.internal.CallableReference: boolean isSuspend()
com.google.android.gms.internal.firebase-auth-api.zzpf: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzhw: com.google.android.gms.internal.firebase-auth-api.zzhw zzb
com.google.android.gms.internal.firebase-auth-api.zznn: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
androidx.activity.ComponentActivity: ComponentActivity()
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowInfoTrackerImpl$Companion Companion
androidx.work.impl.background.systemalarm.ConstraintProxy$StorageNotLowProxy
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: WindowMetricsCalculator$Companion$overrideDecorator$1(java.lang.Object)
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowMetricsCalculator windowMetricsCalculator
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State getState()
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
com.onesignal.JobIntentService$JobServiceEngineImpl$WrapperWorkItem: void complete()
com.google.android.gms.internal.measurement.zzgc: java.lang.String zzX
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
kotlinx.coroutines.CompletionHandlerBase
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
com.google.android.gms.auth.api.signin.GoogleSignInOptions: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgs: com.google.android.gms.internal.measurement.zzgo zzg
com.onesignal.LocationController$PermissionType: com.onesignal.LocationController$PermissionType valueOf(java.lang.String)
androidx.media.AudioAttributesCompatParcelizer: AudioAttributesCompatParcelizer()
com.onesignal.flutter.OneSignalPlugin: void onOSEmailSubscriptionChanged(com.onesignal.OSEmailSubscriptionStateChanges)
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
com.google.android.gms.internal.firebase-auth-api.zzkf: int zzg
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int deferredInsetTypes
androidx.media.AudioAttributesImpl
kotlin.jvm.internal.CallableReference: boolean isOpen()
com.google.android.gms.internal.measurement.zzgh: com.google.android.gms.internal.measurement.zzgh zza
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap nativeGetBitmap(long)
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingAdapter adapter
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.gms.internal.measurement.zzkn: com.google.android.gms.internal.measurement.zzkn[] values()
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$702(io.flutter.embedding.android.FlutterSplashView$SavedState,android.os.Bundle)
androidx.window.R$attr: int splitRatio
kotlinx.coroutines.scheduling.GlobalQueue
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logEventAndBundle(java.lang.String,java.lang.String,android.os.Bundle,com.google.android.gms.internal.measurement.zzcf,long)
androidx.appcompat.widget.ActionMenuView
androidx.window.layout.SidecarCompat$FirstAttachAdapter: SidecarCompat$FirstAttachAdapter(androidx.window.layout.SidecarCompat,android.app.Activity)
com.google.android.gms.internal.firebase-auth-api.zzpr: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept$lambda-1(androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper,java.util.List)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
com.google.android.gms.measurement.AppMeasurement: void logEventInternal(java.lang.String,java.lang.String,android.os.Bundle)
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus[] values()
androidx.browser.browseractions.BrowserActionsFallbackMenuView
androidx.window.layout.FoldingFeature$Orientation: FoldingFeature$Orientation(java.lang.String)
androidx.window.layout.ActivityCompatHelperApi24: boolean isInMultiWindowMode(android.app.Activity)
androidx.window.R$styleable: int SplitPlaceholderRule_splitLayoutDirection
com.google.android.gms.internal.firebase-auth-api.zzlb: com.google.android.gms.internal.firebase-auth-api.zzle zzf
com.google.android.gms.internal.measurement.zzfe: boolean zzm
androidx.core.view.ViewCompat$Api16Impl: int getImportantForAccessibility(android.view.View)
com.google.android.gms.internal.measurement.zzfa: boolean zzh
kotlinx.coroutines.internal.LockFreeTaskQueueCore
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility[] values()
com.google.android.gms.internal.firebase-auth-api.zzju: int zze
kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue
androidx.work.impl.background.systemalarm.SystemAlarmService: SystemAlarmService()
kotlinx.coroutines.channels.Closed
com.google.android.gms.internal.measurement.zzkc: com.google.android.gms.internal.measurement.zzmm zzc
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
androidx.core.view.ViewCompat$Api17Impl: int getLabelFor(android.view.View)
com.onesignal.ADMMessageHandler: void onMessage(android.content.Intent)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] values()
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityIntentPredicates$lambda-3(androidx.window.embedding.EmbeddingAdapter,java.util.Set,android.util.Pair)
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: WindowMetricsCalculator$Companion$decorator$1()
com.google.android.gms.internal.measurement.zzcl: android.os.Parcelable$Creator CREATOR
androidx.window.R$attr: int activityName
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
io.flutter.plugin.platform.SingleViewPresentation: android.content.Context outerContext
com.google.firebase.auth.PhoneAuthProvider$ForceResendingToken: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterTexture(long,long,java.lang.ref.WeakReference)
com.onesignal.shortcutbadger.impl.LGHomeBadger
androidx.cardview.widget.CardView: int getContentPaddingTop()
androidx.window.layout.FoldingFeature$Orientation: java.lang.String description
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker getOrCreate(android.content.Context)
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type FOLD
com.onesignal.JobIntentService: JobIntentService()
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
androidx.window.layout.WindowLayoutInfo: java.util.List displayFeatures
androidx.window.embedding.ActivityRule: ActivityRule(java.util.Set,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.firebase.messaging.threads.ThreadPriority: com.google.firebase.messaging.threads.ThreadPriority[] values()
kotlinx.coroutines.UndispatchedCoroutine
androidx.window.embedding.SplitPlaceholderRule: SplitPlaceholderRule(java.util.Set,android.content.Intent,int,int,float,int)
androidx.window.layout.FoldingFeature$State$Companion: FoldingFeature$State$Companion()
com.google.android.gms.internal.firebase-auth-api.zzod: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfm: java.lang.String zzf
androidx.window.layout.WindowMetricsCalculator$Companion: void reset()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityStarted(com.google.android.gms.dynamic.IObjectWrapper,long)
androidx.cardview.widget.CardView: void setRadius(float)
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
android.support.v4.media.RatingCompat: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.google.android.gms.internal.firebase-auth-api.zzks: com.google.android.gms.internal.firebase-auth-api.zzzr zzf
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int overlayInsetTypes
androidx.window.layout.WindowMetricsCalculator$Companion
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: java.util.concurrent.locks.ReentrantLock lock
androidx.window.embedding.SplitPairFilter: android.content.ComponentName primaryActivityName
androidx.window.layout.SidecarAdapter$Companion: androidx.window.layout.DisplayFeature translate$window_release(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDeviceState)
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: java.lang.Object invoke(java.lang.Object)
com.onesignal.JobIntentService$CompatWorkEnqueuer: void enqueueWork(android.content.Intent)
androidx.window.embedding.ActivityStack: boolean isEmpty
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
android.support.v4.media.session.MediaSessionCompat$Token
androidx.window.embedding.MatcherUtils: boolean areActivityOrIntentComponentsMatching$window_release(android.app.Activity,android.content.ComponentName)
com.onesignal.shortcutbadger.impl.NewHtcHomeBadger
androidx.media.AudioAttributesCompatParcelizer: androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.android.gms.internal.measurement.zzcb: com.google.android.gms.internal.measurement.zzcc asInterface(android.os.IBinder)
com.google.android.gms.internal.firebase-auth-api.zzhb: com.google.android.gms.internal.firebase-auth-api.zzhb zzb
androidx.core.content.ContextCompat$Api28Impl: java.util.concurrent.Executor getMainExecutor(android.content.Context)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
io.flutter.embedding.android.FlutterImageView
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
androidx.window.layout.WindowMetrics: boolean equals(java.lang.Object)
com.google.android.gms.internal.firebase-auth-api.zzfx: com.google.android.gms.internal.firebase-auth-api.zzfx zzb
androidx.activity.ComponentActivity
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.graphics.Matrix getPlatformViewMatrix()
androidx.fragment.app.FragmentActivity
com.google.android.gms.internal.measurement.zzes: int zzf
com.onesignal.OSPermissionChangedInternalObserver
com.google.android.gms.internal.measurement.zzgq: com.google.android.gms.internal.measurement.zzkj zzg
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable computeReflected()
androidx.window.layout.FoldingFeature: boolean isSeparating()
androidx.window.core.Version: java.math.BigInteger getBigInteger()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean animating
com.google.android.gms.measurement.AppMeasurement: void clearConditionalUserProperty(java.lang.String,java.lang.String,android.os.Bundle)
com.google.android.gms.internal.firebase-auth-api.zzgg
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI nativeSpawn(long,java.lang.String,java.lang.String,java.lang.String,java.util.List)
androidx.window.layout.WindowMetrics
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix getFinalMatrix()
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: boolean isExtensionVersionSupported(java.lang.Integer)
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.window.layout.HardwareFoldingFeature: boolean isSeparating()
androidx.window.embedding.SplitRule: float getSplitRatio()
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
kotlinx.coroutines.CommonPool: java.util.concurrent.Executor pool
com.google.firebase.encoders.proto.Protobuf$IntEncoding: com.google.firebase.encoders.proto.Protobuf$IntEncoding[] values()
androidx.window.layout.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)
com.google.android.gms.internal.firebase-auth-api.zznr: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: float refreshRateFPS
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.window.embedding.ActivityStack
android.support.v4.media.session.ParcelableVolumeInfo
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void registerOnMeasurementEventListener(com.google.android.gms.internal.measurement.zzci)
androidx.appcompat.widget.AppCompatImageView
com.google.android.gms.internal.measurement.zzgc: int zzg
com.onesignal.OneSignal$AppEntryAction: com.onesignal.OneSignal$AppEntryAction[] values()
com.onesignal.OSTrigger$OSTriggerOperator: com.onesignal.OSTrigger$OSTriggerOperator[] values()
kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered
io.flutter.view.AccessibilityViewEmbedder: java.lang.Integer getRecordFlutterId(android.view.View,android.view.accessibility.AccessibilityRecord)
androidx.window.embedding.ActivityStack: int hashCode()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void setLastInfo(androidx.window.layout.WindowLayoutInfo)
androidx.window.layout.ExtensionWindowLayoutInfoBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$100(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
androidx.cardview.widget.CardView: float getCardElevation()
com.google.android.gms.internal.firebase-auth-api.zzgv: int zze
com.google.android.gms.internal.measurement.zzfe: java.lang.String zzp
com.google.android.gms.internal.firebase-auth-api.zzgj: com.google.android.gms.internal.firebase-auth-api.zzgj zzb
androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver
com.onesignal.JobIntentService$JobServiceEngineImpl$WrapperWorkItem: android.app.job.JobWorkItem mJobWork
androidx.window.core.Bounds: int getLeft()
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mOrigin
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation completion
com.google.android.gms.internal.firebase-auth-api.zzzf: com.google.android.gms.internal.firebase-auth-api.zzzf[] values()
com.google.android.gms.internal.measurement.zzgx: java.lang.String zzh
com.google.android.gms.internal.firebase-auth-api.zzgp: int zzf
com.google.firebase.messaging.threads.ThreadPriority: com.google.firebase.messaging.threads.ThreadPriority valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzfs
io.flutter.embedding.engine.FlutterJNI: void nativeInit(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
androidx.appcompat.widget.AppCompatCheckedTextView
com.google.android.gms.internal.measurement.zzfc: boolean zzg
androidx.window.layout.SidecarCompat$TranslatingCallback
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPlatformMessage(long,java.lang.String,java.nio.ByteBuffer,int,int)
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
androidx.window.embedding.SplitPlaceholderRule: java.util.Set getFilters()
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode valueOf(java.lang.String)
com.onesignal.SyncJobService
io.flutter.embedding.engine.FlutterJNI: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
com.google.android.gms.internal.firebase-auth-api.zzkv
com.google.android.gms.internal.firebase-auth-api.zzkn: com.google.android.gms.internal.firebase-auth-api.zzkn zzb
io.flutter.embedding.android.FlutterActivity: FlutterActivity()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept(androidx.window.layout.WindowLayoutInfo)
androidx.window.layout.SidecarCompat: java.lang.String TAG
com.onesignal.OSNotificationWorkManager$NotificationWorker: OSNotificationWorkManager$NotificationWorker(android.content.Context,androidx.work.WorkerParameters)
com.google.android.gms.measurement.AppMeasurementService
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinWidth
com.google.android.gms.internal.firebase-auth-api.zzack: com.google.android.gms.internal.firebase-auth-api.zzack[] values()
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: boolean mActive
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType$Companion Companion
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void performAction(android.os.Bundle,com.google.android.gms.internal.measurement.zzcf,long)
io.flutter.plugin.platform.SingleViewPresentation: android.widget.FrameLayout container
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void generateEventId(com.google.android.gms.internal.measurement.zzcf)
com.google.android.gms.internal.firebase-auth-api.zzik: com.google.android.gms.internal.firebase-auth-api.zzik zzb
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
com.google.firebase.analytics.FirebaseAnalytics: java.lang.String getFirebaseInstanceId()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1
androidx.window.embedding.SplitController: void initialize(android.content.Context,int)
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimation(android.view.View,java.lang.Runnable)
com.google.android.gms.internal.measurement.zzfu
com.google.android.gms.internal.firebase-auth-api.zzhz: com.google.android.gms.internal.firebase-auth-api.zzhz zzb
androidx.core.app.CoreComponentFactory
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.Object invokeSuspend(java.lang.Object)
androidx.window.embedding.SplitRuleParser: SplitRuleParser()
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend access$getGlobalInstance$cp()
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: void onConfigurationChanged(android.content.res.Configuration)
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType NONE
com.google.android.gms.internal.firebase-auth-api.zzgv: com.google.android.gms.internal.firebase-auth-api.zzyj zzg
androidx.annotation.Keep
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushTransform(float[])
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.gms.internal.measurement.zzgc: int zzt
kotlin.coroutines.jvm.internal.SuspendLambda: java.lang.String toString()
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void onSplitInfoChanged(java.util.List)
androidx.window.layout.EmptyDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)
androidx.window.embedding.EmbeddingCompat: EmbeddingCompat(androidx.window.extensions.embedding.ActivityEmbeddingComponent,androidx.window.embedding.EmbeddingAdapter)
androidx.core.view.ViewCompat$Api28Impl: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener insetsListener
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTriggerEventName
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status[] values()
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
com.google.android.gms.internal.measurement.zzfm: java.lang.String zzj
androidx.window.layout.ActivityCompatHelperApi30: android.graphics.Rect maximumWindowBounds(android.app.Activity)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityPaused(com.google.android.gms.dynamic.IObjectWrapper,long)
androidx.appcompat.widget.ViewStubCompat
io.flutter.embedding.engine.FlutterJNI: void onEndFrame()
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.onesignal.shortcutbadger.impl.DefaultBadger: DefaultBadger()
androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver: ConstraintProxyUpdateReceiver()
io.flutter.view.AccessibilityViewEmbedder: io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors reflectionAccessors
androidx.lifecycle.SavedStateHandleController
androidx.core.content.ContextCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
com.google.android.gms.common.internal.zzj: android.os.Parcelable$Creator CREATOR
com.google.android.gms.measurement.AppMeasurementReceiver: AppMeasurementReceiver()
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet)
androidx.window.embedding.ExtensionEmbeddingBackend: void registerSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.google.android.gms.internal.firebase-auth-api.zzjj: com.google.android.gms.internal.firebase-auth-api.zzjj zzb
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
kotlinx.coroutines.DispatchedCoroutine
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void resetAnalyticsData(long)
com.google.firebase.datatransport.TransportRegistrar: java.util.List getComponents()
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.platform.PlatformViewsController platformViewsController
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.lifecycle.SavedStateHandleController$OnRecreation
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType[] values()
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key key
androidx.window.embedding.ExtensionEmbeddingBackend: ExtensionEmbeddingBackend(androidx.window.embedding.EmbeddingInterfaceCompat)
com.onesignal.influence.domain.OSInfluenceChannel: com.onesignal.influence.domain.OSInfluenceChannel valueOf(java.lang.String)
kotlinx.coroutines.BlockingEventLoop
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
com.google.android.gms.internal.firebase-auth-api.zzpt: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzlm
com.onesignal.JobIntentService$JobServiceEngineImpl$WrapperWorkItem: android.content.Intent getIntent()
androidx.window.embedding.SplitInfo: boolean equals(java.lang.Object)
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void detachFromGLContext()
com.google.android.gms.internal.measurement.zzgo: com.google.android.gms.internal.measurement.zzgo zza
com.onesignal.ADMMessageHandler: void onRegistrationError(java.lang.String)
com.google.android.gms.internal.measurement.zzgc: java.lang.String zzY
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logEvent(java.lang.String,java.lang.String,android.os.Bundle,boolean,boolean,long)
io.flutter.plugin.platform.SingleViewPresentation: void onCreate(android.os.Bundle)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsVariationSelector(int)
androidx.work.impl.workers.CombineContinuationsWorker: CombineContinuationsWorker(android.content.Context,androidx.work.WorkerParameters)
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryNotLowProxy: ConstraintProxy$BatteryNotLowProxy()
androidx.window.layout.SidecarCompat$FirstAttachAdapter: void onViewAttachedToWindow(android.view.View)
androidx.appcompat.widget.ScrollingTabContainerView
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void initialize(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.internal.measurement.zzcl,long)
com.google.android.gms.internal.firebase-auth-api.zzhe: com.google.android.gms.internal.firebase-auth-api.zzhe zzb
kotlinx.coroutines.StandaloneCoroutine
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
com.google.android.gms.internal.measurement.zzgc: long zzO
androidx.window.layout.SidecarAdapter$Companion: int getSidecarDevicePosture$window_release(androidx.window.sidecar.SidecarDeviceState)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
com.onesignal.JobIntentService$WorkEnqueuer: int mJobId
com.onesignal.OSUtils$SchemaType: com.onesignal.OSUtils$SchemaType[] values()
com.google.android.gms.internal.firebase-auth-api.zznj: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] values()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void addListener(androidx.core.util.Consumer)
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State$Companion Companion
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
androidx.cardview.widget.CardView: void setCardBackgroundColor(int)
androidx.window.layout.SidecarCompat$TranslatingCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
androidx.window.embedding.SplitPairFilter: android.content.ComponentName secondaryActivityName
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.EmbeddingInterfaceCompat initAndVerifyEmbeddingExtension()
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
androidx.core.view.ViewCompat$Api21Impl: void setElevation(android.view.View,float)
androidx.media.AudioAttributesCompat: AudioAttributesCompat()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
androidx.window.layout.SidecarWindowBackend: boolean DEBUG
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
androidx.window.embedding.SplitPlaceholderRule: android.content.Intent placeholderIntent
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.concurrent.locks.ReentrantLock extensionWindowBackendLock
com.google.android.gms.internal.firebase-auth-api.zzgg: com.google.android.gms.internal.firebase-auth-api.zzjd zzg
androidx.window.core.Version$Companion: androidx.window.core.Version getUNKNOWN()
com.google.android.gms.internal.measurement.zzfa
androidx.window.embedding.SplitRule
com.google.firebase.auth.internal.zzx: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.SplitRuleParser: java.util.Set parseSplitXml(android.content.Context,int)
com.google.android.gms.internal.measurement.zzeq: java.lang.String zzj
androidx.window.embedding.SplitRuleParser: java.util.Set parseSplitRules$window_release(android.content.Context,int)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture
androidx.appcompat.widget.ActionBarOverlayLayout
kotlinx.coroutines.JobSupport
com.google.android.gms.measurement.AppMeasurementJobService
io.flutter.embedding.engine.FlutterJNI: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
androidx.window.core.Version: androidx.window.core.Version access$getVERSION_1_0$cp()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: void onLowMemory()
kotlin.jvm.internal.CallableReference: boolean isAbstract()
androidx.window.embedding.SplitController: void clearRegisteredRules()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: boolean isEmpty()
androidx.window.layout.SidecarWindowBackend$Companion: androidx.window.layout.SidecarWindowBackend getInstance(android.content.Context)
com.google.android.gms.safetynet.SafeBrowsingData: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzjx: com.google.android.gms.internal.firebase-auth-api.zzjx zzb
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getHINGE$cp()
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
androidx.window.layout.FoldingFeature$OcclusionType: java.lang.String toString()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] values()
androidx.window.embedding.ActivityStack: boolean equals(java.lang.Object)
androidx.core.view.ViewCompat$Api16Impl: boolean getFitsSystemWindows(android.view.View)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
com.google.firebase.installations.FirebaseInstallationsRegistrar: FirebaseInstallationsRegistrar()
androidx.appcompat.widget.SearchView: int getPreferredHeight()
com.onesignal.JobIntentService$CompatWorkItem: android.content.Intent mIntent
com.onesignal.JobIntentService$ComponentNameWithWakeful: JobIntentService$ComponentNameWithWakeful(android.content.ComponentName,boolean)
androidx.window.layout.WindowMetricsCalculatorDecorator: androidx.window.layout.WindowMetricsCalculator decorate(androidx.window.layout.WindowMetricsCalculator)
com.google.android.gms.auth.api.signin.internal.GoogleSignInOptionsExtensionParcelable: android.os.Parcelable$Creator CREATOR
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetBottom(android.view.DisplayCutout)
com.google.firebase.components.ComponentDiscoveryService: ComponentDiscoveryService()
androidx.window.layout.SidecarCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)
com.google.android.gms.common.internal.safeparcel.SafeParcelable: java.lang.String NULL
com.google.firebase.auth.internal.zzz: android.os.Parcelable$Creator CREATOR
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
androidx.window.layout.SidecarCompat$FirstAttachAdapter
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDisplayFeatures(java.util.List,java.util.List)
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
com.google.android.gms.internal.measurement.zzgc: int zza
androidx.media.AudioAttributesImplBaseParcelizer
androidx.appcompat.widget.SearchView: void setImeOptions(int)
androidx.window.layout.SidecarCompat$Companion: SidecarCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.gms.internal.measurement.zzgj: com.google.android.gms.internal.measurement.zzki zzg
com.google.android.gms.internal.firebase-auth-api.zzit: com.google.android.gms.internal.firebase-auth-api.zzyj zzg
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay valueOf(java.lang.String)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodesTranslateBounds(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect,android.view.accessibility.AccessibilityNodeInfo)
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController getInstance()
androidx.window.R$styleable: int ActivityFilter_activityAction
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
com.google.android.gms.internal.measurement.zzgq: int zze
androidx.cardview.widget.CardView: int getContentPaddingLeft()
androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
androidx.window.embedding.SplitPairRule: java.util.Set filters
io.flutter.embedding.engine.FlutterJNI: void onSurfaceCreated(android.view.Surface)
com.google.android.gms.internal.firebase-auth-api.zzky: com.google.android.gms.internal.firebase-auth-api.zzky zzb
com.onesignal.WebViewManager$Position: com.onesignal.WebViewManager$Position[] values()
androidx.window.layout.ExtensionInterfaceCompat: boolean validateExtensionInterface()
com.google.android.gms.internal.measurement.zzes: com.google.android.gms.internal.measurement.zzel zzh
androidx.appcompat.widget.ActivityChooserView$InnerLayout
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConsentThirdParty(android.os.Bundle,long)
androidx.window.embedding.ExtensionEmbeddingBackend: void registerRule(androidx.window.embedding.EmbeddingRule)
com.onesignal.shortcutbadger.impl.HuaweiHomeBadger: HuaweiHomeBadger()
com.google.android.gms.internal.measurement.zzgf
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityDelegate(io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate)
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: DynamiteModule$DynamiteLoaderClassLoader()
com.google.android.gms.internal.measurement.zzgs: int zze
androidx.work.impl.utils.futures.AbstractFuture: androidx.work.impl.utils.futures.AbstractFuture$Waiter waiters
com.google.android.gms.common.zzs: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.SplitPairRule: boolean finishSecondaryWithPrimary
androidx.appcompat.widget.AppCompatImageButton
com.google.android.gms.internal.firebase-auth-api.zzgv: com.google.android.gms.internal.firebase-auth-api.zzhb zzf
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.window.embedding.SplitController$Companion: SplitController$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.google.android.gms.internal.measurement.zzfy: java.lang.String zzf
androidx.window.embedding.SplitController: java.util.Set getSplitRules()
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
com.onesignal.HmsMessageServiceOneSignal
android.support.v4.media.MediaDescriptionCompat: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
io.flutter.embedding.engine.FlutterJNI: void attachToNative()
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
com.google.firebase.auth.PlayGamesAuthCredential: android.os.Parcelable$Creator CREATOR
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type$Companion Companion
androidx.window.embedding.SplitPairFilter: java.lang.String getSecondaryActivityIntentAction()
com.google.android.gms.internal.measurement.zzfe: java.lang.String zzl
com.google.firebase.auth.FirebaseAuthRegistrar: FirebaseAuthRegistrar()
com.google.android.gms.internal.measurement.zzgf: com.google.android.gms.internal.measurement.zzgf zza
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] values()
com.google.android.gms.internal.measurement.zzej: boolean zzm
com.onesignal.JobIntentService$JobServiceEngineImpl: java.lang.String TAG
io.flutter.embedding.engine.FlutterJNI: void unregisterTexture(long)
androidx.window.R$attr: int activityAction
android.support.v4.media.session.ParcelableVolumeInfo: android.os.Parcelable$Creator CREATOR
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo getLastInfo()
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessageResponse(int,java.nio.ByteBuffer)
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
com.onesignal.JobIntentService$WorkEnqueuer
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context)
com.google.android.gms.cloudmessaging.zzd: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzeq: int zze
com.onesignal.OSEmailSubscriptionChangedInternalObserver: void changed(com.onesignal.OSEmailSubscriptionState)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: BaseContinuationImpl(kotlin.coroutines.Continuation)
androidx.window.layout.WindowInfoTracker
kotlinx.coroutines.internal.DispatchedContinuation
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPlaceholderRule parseSplitPlaceholderRule(android.content.Context,android.content.res.XmlResourceParser)
androidx.window.embedding.SplitController
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.window.layout.WindowLayoutInfo: int hashCode()
androidx.core.widget.PopupWindowCompat$Api23Impl: int getWindowLayoutType(android.widget.PopupWindow)
kotlin.jvm.internal.CallableReference: boolean isTopLevel
androidx.window.embedding.EmbeddingCompat: androidx.window.extensions.embedding.ActivityEmbeddingComponent embeddingExtension
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetTop(android.view.DisplayCutout)
com.google.android.gms.internal.measurement.zzgf: int zze
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzvk: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceDestroyed()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback
androidx.window.layout.SidecarCompat: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface access$getExtensionCallback$p(androidx.window.layout.SidecarCompat)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityFeatures(int)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values()
androidx.window.core.Version: Version(int,int,int,java.lang.String)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.window.embedding.ActivityStack: boolean contains(android.app.Activity)
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: SidecarCompat$DistinctSidecarElementCallback(androidx.window.layout.SidecarAdapter,androidx.window.sidecar.SidecarInterface$SidecarCallback)
com.onesignal.OneSignal$EmailErrorType: com.onesignal.OneSignal$EmailErrorType valueOf(java.lang.String)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getMutators()
com.onesignal.shortcutbadger.impl.SonyHomeBadger
com.google.android.gms.internal.firebase-auth-api.zzzj: com.google.android.gms.internal.firebase-auth-api.zzze zzb
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
androidx.window.layout.FoldingFeature$OcclusionType$Companion: FoldingFeature$OcclusionType$Companion()
androidx.cardview.widget.CardView: void setCardElevation(float)
kotlin.jvm.internal.CallableReference: java.lang.Object receiver
androidx.window.layout.WindowLayoutInfo: java.lang.String toString()
androidx.window.embedding.SplitPairRule: boolean getFinishSecondaryWithPrimary()
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
androidx.lifecycle.SavedStateHandleController$1
androidx.core.view.ViewCompat$Api17Impl: int generateViewId()
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
com.google.android.gms.internal.measurement.zzfy
com.google.android.gms.internal.measurement.zzbn: android.os.IBinder asBinder()
androidx.window.core.Version: androidx.window.core.Version VERSION_1_0
com.onesignal.shortcutbadger.impl.LGHomeBadger: LGHomeBadger()
io.flutter.embedding.engine.FlutterJNI: void nativeDeferredComponentInstallFailure(int,java.lang.String,boolean)
androidx.window.layout.WindowMetricsCalculatorCompat
com.google.android.gms.internal.firebase-auth-api.zziy: com.google.android.gms.internal.firebase-auth-api.zziy zzb
com.google.android.gms.internal.measurement.zzgs
com.google.android.gms.internal.firebase-auth-api.zzgg: com.google.android.gms.internal.firebase-auth-api.zzgm zzf
com.onesignal.JobIntentService$WorkEnqueuer: android.content.ComponentName mComponentName
io.flutter.embedding.engine.FlutterJNI: void nativeOnVsync(long,long,long)
androidx.appcompat.view.menu.ExpandedMenuView
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
androidx.work.NetworkType: androidx.work.NetworkType valueOf(java.lang.String)
androidx.window.embedding.SplitPairFilter: android.content.ComponentName getPrimaryActivityName()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath
androidx.work.WorkInfo$State: androidx.work.WorkInfo$State valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzlm: com.google.android.gms.internal.firebase-auth-api.zzlm zzb
com.google.android.gms.internal.firebase-auth-api.zzjx: com.google.android.gms.internal.firebase-auth-api.zzjr zzf
androidx.window.layout.SidecarCompat$TranslatingCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
io.flutter.embedding.android.FlutterSplashView$SavedState: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
androidx.window.layout.FoldingFeature$State: java.lang.String toString()
androidx.window.layout.SidecarWindowBackend$Companion: SidecarWindowBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.android.HandlerContext createDispatcher(java.util.List)
io.flutter.embedding.engine.FlutterJNI: void nativePrefetchDefaultFontManager()
androidx.window.core.Version: int patch
com.google.firebase.auth.internal.zzt: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean needsSave
com.google.android.gms.internal.firebase-auth-api.zzin: com.google.android.gms.internal.firebase-auth-api.zzin zzb
com.onesignal.OneSignal$SMSErrorType: com.onesignal.OneSignal$SMSErrorType[] values()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] values()
com.google.firebase.provider.FirebaseInitProvider
androidx.window.layout.WindowInfoTracker$Companion
androidx.core.view.ViewCompat$Api21Impl: float getZ(android.view.View)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo convertToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,int,android.view.View)
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryChargingProxy
io.flutter.embedding.engine.FlutterJNI: void nativeRunBundleAndSnapshotFromLibrary(long,java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
io.flutter.view.AccessibilityViewEmbedder: java.util.Map originToFlutterId
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity getActivity()
androidx.activity.ImmLeaksCleaner
com.google.android.gms.internal.firebase-auth-api.zzgm: com.google.android.gms.internal.firebase-auth-api.zzgs zzf
com.onesignal.JobIntentService$CommandProcessor: JobIntentService$CommandProcessor(com.onesignal.JobIntentService)
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
kotlinx.coroutines.channels.LinkedListChannel
androidx.core.view.ViewCompat$Api28Impl: boolean isAccessibilityHeading(android.view.View)
com.onesignal.JobIntentService$GenericWorkItem: android.content.Intent getIntent()
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
io.flutter.embedding.engine.FlutterJNI: void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
com.google.android.gms.internal.measurement.zznb: com.google.android.gms.internal.measurement.zznb[] values()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.onesignal.OSEmailSubscriptionChangedInternalObserver
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTimedOutEventName
androidx.window.layout.WindowInfoTracker$Companion: boolean DEBUG
com.google.android.gms.internal.measurement.zzfe
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
com.google.android.gms.internal.measurement.zzfo
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
androidx.window.embedding.SplitPairRule: java.util.Set getFilters()
com.google.firebase.auth.TwitterAuthCredential: android.os.Parcelable$Creator CREATOR
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted
androidx.work.Worker: Worker(android.content.Context,androidx.work.WorkerParameters)
androidx.window.R$id
com.google.firebase.messaging.FirebaseMessagingRegistrar: FirebaseMessagingRegistrar()
com.google.android.gms.internal.measurement.zzfe: long zzf
androidx.window.embedding.SplitController$Companion
com.onesignal.NotificationOpenedReceiverAndroid22AndOlder
androidx.window.R$styleable: int SplitPairRule_finishSecondaryWithPrimary
androidx.window.core.Version: int major
com.onesignal.JobIntentService$JobServiceEngineImpl
androidx.appcompat.widget.AppCompatTextView
com.google.android.gms.internal.firebase-auth-api.zzkm: com.google.android.gms.internal.firebase-auth-api.zzka zze
androidx.core.widget.NestedScrollView
androidx.window.R$styleable: int SplitPairRule_finishPrimaryWithSecondary
androidx.window.layout.SidecarCompat: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface extensionCallback
com.google.android.gms.internal.measurement.zzgc: long zzo
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsN$window_release(android.app.Activity)
com.onesignal.OSSubscriptionState: void changed(com.onesignal.OSPermissionState)
androidx.window.R$styleable: int SplitPairRule_splitMinWidth
androidx.window.layout.SidecarWindowBackend: void callbackRemovedForActivity(android.app.Activity)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean released
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.fragment.app.DialogFragment
com.onesignal.shortcutbadger.impl.VivoHomeBadger
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$600(io.flutter.embedding.android.FlutterSplashView$SavedState)
io.flutter.embedding.engine.FlutterJNI: java.util.Set flutterUiDisplayListeners
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority[] values()
com.google.android.gms.internal.measurement.zzgx: int zzf
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
androidx.work.impl.background.systemalarm.RescheduleReceiver
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode valueOf(java.lang.String)
androidx.appcompat.widget.AlertDialogLayout
androidx.cardview.widget.CardView
com.google.android.gms.internal.firebase-auth-api.zzzj
com.google.android.gms.signin.internal.zag: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List lastInfo
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
kotlin.jvm.internal.Lambda: int getArity()
com.google.android.gms.internal.measurement.zzfw: float zzi
io.flutter.view.AccessibilityViewEmbedder: android.view.View platformViewOfNode(int)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture)
com.google.android.gms.internal.firebase-auth-api.zzkn
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformViewFactory viewFactory
com.google.android.gms.internal.measurement.zzfg: java.lang.String zzg
com.google.firebase.messaging.FirebaseMessagingService
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.work.impl.WorkDatabase: WorkDatabase()
com.google.android.gms.internal.firebase-auth-api.zzit: com.google.android.gms.internal.firebase-auth-api.zzit zzb
com.google.android.gms.internal.firebase-auth-api.zzks: com.google.android.gms.internal.firebase-auth-api.zzks zzb
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver: ForceStopRunnable$BroadcastReceiver()
com.google.android.gms.internal.measurement.zzbl: com.google.android.gms.internal.measurement.zzbl[] values()
com.onesignal.JobIntentService$CompatWorkEnqueuer: void serviceProcessingFinished()
com.google.android.gms.internal.measurement.zzgc: java.lang.String zzag
androidx.core.app.NotificationCompat$Builder: java.lang.CharSequence mContentText
androidx.appcompat.widget.AppCompatToggleButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.onesignal.JobIntentService$JobServiceEngineImpl: android.app.job.JobParameters mParams
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.Set getSplitRules()
com.google.android.gms.auth.api.signin.SignInAccount: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: androidx.core.util.Consumer $consumer
com.google.firebase.auth.FacebookAuthCredential: android.os.Parcelable$Creator CREATOR
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getObbDirs(android.content.Context)
io.flutter.embedding.engine.FlutterJNI: void prefetchDefaultFontManager()
com.google.android.gms.internal.measurement.zzfa: com.google.android.gms.internal.measurement.zzfa zza
androidx.window.embedding.EmptyEmbeddingComponent
io.flutter.embedding.engine.FlutterJNI: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList windowLayoutChangeCallbacks
com.google.android.gms.internal.measurement.zzgx: com.google.android.gms.internal.measurement.zzkj zzg
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
androidx.window.embedding.ActivityFilter: android.content.ComponentName getComponentName()
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
io.flutter.embedding.engine.FlutterJNI: void ensureAttachedToNative()
com.google.firebase.messaging.FirebaseMessaging
com.google.android.gms.internal.firebase-auth-api.zzwa: android.os.Parcelable$Creator CREATOR
androidx.window.layout.DisplayFeature: android.graphics.Rect getBounds()
androidx.appcompat.widget.ActionBarContextView
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
com.google.android.gms.internal.measurement.zzfc
androidx.window.embedding.ExtensionEmbeddingBackend: void unregisterRule(androidx.window.embedding.EmbeddingRule)
com.google.android.gms.internal.measurement.zzgx: double zzk
androidx.core.content.FileProvider: FileProvider()
androidx.window.core.Bounds: int bottom
androidx.window.layout.SidecarCompat: java.util.Map windowListenerRegisteredContexts
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority valueOf(java.lang.String)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: android.app.Activity $activity
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View$OnApplyWindowInsetsListener getInsetsListener()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getTestFlag(com.google.android.gms.internal.measurement.zzcf,int)
androidx.core.view.ViewCompat$Api23Impl: int getScrollIndicators(android.view.View)
com.onesignal.FCMIntentService: FCMIntentService()
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus[] values()
com.google.android.gms.internal.measurement.zzfw: int zze
androidx.window.core.Version: int getMajor()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void getTransformMatrix(float[])
com.google.android.gms.internal.measurement.zzfc: java.lang.String zzf
androidx.window.layout.WindowMetricsCalculatorCompat: java.lang.String TAG
androidx.window.core.Version: kotlin.Lazy bigInteger$delegate
io.flutter.embedding.engine.FlutterJNI: void loadLibrary()
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.onesignal.UpgradeReceiver: UpgradeReceiver()
com.google.firebase.FirebaseCommonRegistrar
com.google.android.gms.internal.firebase-auth-api.zznf: android.os.Parcelable$Creator CREATOR
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
com.google.android.gms.internal.firebase-auth-api.zzkr: int zzg
androidx.work.impl.background.systemalarm.ConstraintProxy$NetworkStateProxy: ConstraintProxy$NetworkStateProxy()
com.google.android.gms.internal.firebase-auth-api.zzhb
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier[] values()
androidx.window.embedding.SplitPairRule: boolean equals(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
com.google.android.gms.internal.measurement.zzfw: java.lang.String zzg
com.google.android.gms.internal.firebase-auth-api.zzhn: int zzf
androidx.work.impl.background.systemalarm.SystemAlarmService
androidx.window.embedding.ActivityRule: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void ensureNotAttachedToNative()
com.onesignal.influence.domain.OSInfluenceChannel: com.onesignal.influence.domain.OSInfluenceChannel[] values()
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl
com.google.android.gms.internal.firebase-auth-api.zzka: int zzg
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifier(int)
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
com.onesignal.OSNotificationRestoreWorkManager$NotificationRestoreWorker: OSNotificationRestoreWorkManager$NotificationRestoreWorker(android.content.Context,androidx.work.WorkerParameters)
androidx.window.core.Bounds: int getRight()
com.google.android.gms.internal.measurement.zzej: boolean zzi
com.google.android.gms.internal.measurement.zzfu: int zze
com.google.android.gms.internal.firebase-auth-api.zzpp: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: void detachFromNativeAndReleaseResources()
com.google.android.gms.internal.firebase-auth-api.zzot: android.os.Parcelable$Creator CREATOR
androidx.work.impl.background.systemalarm.ConstraintProxy$StorageNotLowProxy: ConstraintProxy$StorageNotLowProxy()
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle getLifecycle()
androidx.window.embedding.SplitController: void registerRule(androidx.window.embedding.EmbeddingRule)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.gms.internal.measurement.zzgl: long zzi
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.widget.AppCompatToggleButton
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
io.flutter.view.AccessibilityViewEmbedder: int nextFlutterId
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityPairPredicates$lambda-1(androidx.window.embedding.EmbeddingAdapter,java.util.Set,android.util.Pair)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setUserId(java.lang.String,long)
kotlinx.coroutines.internal.ThreadSafeHeap
androidx.window.layout.SidecarCompat: java.util.Map componentCallbackMap
com.google.android.gms.internal.firebase-auth-api.zzhw: com.google.android.gms.internal.firebase-auth-api.zzyj zzf
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getFinalClippingPaths()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
androidx.window.embedding.SplitRule: SplitRule(int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.ViewCompat$Api21Impl: boolean startNestedScroll(android.view.View,int)
androidx.window.embedding.SplitRule$LayoutDir
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: java.lang.ClassLoader sClassLoader
androidx.window.layout.WindowInfoTrackerImpl$Companion: WindowInfoTrackerImpl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted()
androidx.window.embedding.SplitController: void unregisterRule(androidx.window.embedding.EmbeddingRule)
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
androidx.window.core.Version$Companion
com.google.android.gms.internal.measurement.zzgo
com.onesignal.JobIntentService$GenericWorkItem: void complete()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KVisibility getVisibility()
com.google.android.gms.internal.firebase-auth-api.zziq: com.google.android.gms.internal.firebase-auth-api.zzyj zzg
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback
com.google.android.gms.internal.measurement.zzfq: com.google.android.gms.internal.measurement.zzfq zza
androidx.window.embedding.SplitController$Companion: androidx.window.embedding.SplitController getInstance()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat getWindowExtension()
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
com.google.android.gms.internal.firebase-auth-api.zzkn: com.google.android.gms.internal.firebase-auth-api.zzzr zzf
com.onesignal.shortcutbadger.impl.XiaomiHomeBadger
androidx.window.layout.HardwareFoldingFeature: java.lang.String toString()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
com.google.android.gms.internal.measurement.zzfa: int zze
androidx.window.embedding.EmbeddingTranslatingCallback: androidx.window.embedding.EmbeddingAdapter adapter
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
com.google.android.gms.internal.measurement.zzeq: boolean zzg
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer callback
com.google.firebase.analytics.FirebaseAnalytics: void setCurrentScreen(android.app.Activity,java.lang.String,java.lang.String)
com.google.android.gms.measurement.AppMeasurement: java.lang.String getCurrentScreenName()
androidx.window.core.Version$bigInteger$2: Version$bigInteger$2(androidx.window.core.Version)
androidx.core.view.ViewCompat$Api21Impl: void stopNestedScroll(android.view.View)
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,boolean)
com.google.android.gms.internal.firebase-auth-api.zzki: java.lang.String zzi
kotlin.coroutines.AbstractCoroutineContextElement: AbstractCoroutineContextElement(kotlin.coroutines.CoroutineContext$Key)
com.google.android.gms.internal.firebase-auth-api.zzky
com.google.android.gms.internal.measurement.zzgc: java.lang.String zzv
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mExpiredEventParams
io.flutter.embedding.engine.FlutterJNI: void setPlatformViewsController(io.flutter.plugin.platform.PlatformViewsController)
com.google.firebase.auth.ActionCodeSettings: android.os.Parcelable$Creator CREATOR
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1(androidx.core.util.Consumer)
com.google.android.gms.internal.firebase-auth-api.zzgj: com.google.android.gms.internal.firebase-auth-api.zzjg zzf
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
androidx.window.layout.WindowMetricsCalculatorCompat: android.view.DisplayCutout getCutoutForDisplay(android.view.Display)
androidx.work.ListenableWorker: ListenableWorker(android.content.Context,androidx.work.WorkerParameters)
androidx.window.embedding.SplitRule: SplitRule(int,int,float,int)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.startup.InitializationProvider
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
com.google.android.gms.auth.api.credentials.CredentialRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzit: int zzf
androidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode[] values()
com.google.android.gms.internal.firebase-auth-api.zzjj: int zze
androidx.window.layout.FoldingFeature$Orientation$Companion: FoldingFeature$Orientation$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: android.app.Activity activity
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat[] values()
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: void setSplashDrawable(android.graphics.drawable.Drawable)
android.support.v4.media.MediaBrowserCompat$MediaItem: android.os.Parcelable$Creator CREATOR
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetricsCalculator$Companion $$INSTANCE
androidx.window.layout.HardwareFoldingFeature: boolean equals(java.lang.Object)
com.onesignal.JobIntentService$CompatWorkEnqueuer: boolean mServiceProcessing
androidx.window.layout.EmptyDecorator: EmptyDecorator()
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzoh: android.os.Parcelable$Creator CREATOR
com.onesignal.OSUtils$SchemaType: com.onesignal.OSUtils$SchemaType valueOf(java.lang.String)
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArraySet splitRules
com.onesignal.OSNotificationWorkManager$NotificationWorker
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$1
com.google.firebase.messaging.reporting.MessagingClientEvent$Event: com.google.firebase.messaging.reporting.MessagingClientEvent$Event[] values()
com.google.android.gms.common.api.GoogleApiClient: void connect()
androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_1_0()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType valueOf(java.lang.String)
androidx.window.embedding.EmbeddingAdapter: boolean translateIntentPredicates$lambda-8(java.util.Set,android.content.Intent)
com.google.firebase.installations.FirebaseInstallationsRegistrar: java.util.List getComponents()
com.google.android.gms.internal.firebase-auth-api.zzzm: int zzd
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
com.google.android.gms.internal.measurement.zzkc: int zzd
androidx.window.layout.FoldingFeature$OcclusionType
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker$Companion $$INSTANCE
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList getSplitChangeCallbacks()
androidx.core.view.ViewCompat$Api21Impl: boolean hasNestedScrollingParent(android.view.View)
androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceDestroyed(long)
kotlinx.coroutines.android.AndroidDispatcherFactory
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.flutter.embedding.engine.FlutterOverlaySurface
io.flutter.embedding.engine.FlutterJNI: java.lang.String getObservatoryUri()
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
androidx.work.WorkManagerInitializer: WorkManagerInitializer()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides valueOf(java.lang.String)
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityPredicates$lambda-6(java.util.Set,android.app.Activity)
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
com.onesignal.OneSignal$PromptActionResult: com.onesignal.OneSignal$PromptActionResult[] values()
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
androidx.window.embedding.ActivityFilter: android.content.ComponentName componentName
com.google.android.gms.internal.firebase-auth-api.zzhk: com.google.android.gms.internal.firebase-auth-api.zzhk zzb
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void addListener(java.util.concurrent.Executor,androidx.core.util.Consumer,kotlinx.coroutines.flow.Flow)
androidx.work.impl.diagnostics.DiagnosticsReceiver
com.google.android.gms.measurement.AppMeasurement: java.lang.String getGmpAppId()
androidx.window.layout.WindowMetrics: java.lang.String toString()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
com.google.android.gms.internal.firebase-auth-api.zzjo: com.google.android.gms.internal.firebase-auth-api.zzjo zzb
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.google.android.gms.internal.firebase-auth-api.zzkv: int zze
androidx.lifecycle.LifecycleService: LifecycleService()
androidx.appcompat.widget.SearchView: void setIconified(boolean)
androidx.window.embedding.SplitController: boolean isSplitSupported()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: int label
androidx.window.embedding.SplitRule: SplitRule()
androidx.core.content.ContextCompat$Api16Impl: void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.layout.SidecarAdapter sidecarAdapter
com.google.android.gms.internal.measurement.zzfg
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPairFilter parseSplitPairFilter(android.content.Context,android.content.res.XmlResourceParser)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action valueOf(java.lang.String)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow valueOf(java.lang.String)
androidx.window.R$attr: int splitLayoutDirection
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
com.google.android.gms.internal.measurement.zzgc: java.lang.String zzP
androidx.core.view.ViewCompat$Api16Impl: int getMinimumWidth(android.view.View)
com.google.android.gms.internal.measurement.zzgc: java.lang.String zzB
androidx.cardview.widget.CardView: void setPreventCornerOverlap(boolean)
com.google.android.gms.internal.firebase-auth-api.zzks: int zze
androidx.window.embedding.EmbeddingCompat$Companion: EmbeddingCompat$Companion()
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader getImageReader()
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] values()
com.google.android.gms.internal.measurement.zzel: com.google.android.gms.internal.measurement.zzeq zzg
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: boolean validBounds(android.app.Activity,androidx.window.core.Bounds)
androidx.window.layout.SidecarAdapter: SidecarAdapter()
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
androidx.core.view.ViewCompat$Api17Impl: void setLabelFor(android.view.View,int)
com.google.android.gms.internal.firebase-auth-api.zzik: int zzg
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
com.onesignal.UpgradeReceiver
androidx.window.embedding.ExtensionEmbeddingBackend: void unregisterSplitListenerForActivity(androidx.core.util.Consumer)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.core.app.AppOpsManagerCompat$Api29Impl: java.lang.String getOpPackageName(android.content.Context)
com.onesignal.OSUtils
androidx.versionedparcelable.ParcelImpl
com.google.android.gms.internal.firebase-auth-api.zziq
androidx.window.layout.ExtensionWindowLayoutInfoBackend: androidx.window.extensions.layout.WindowLayoutComponent component
com.google.android.gms.internal.firebase-auth-api.zzhk: int zze
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void removeWindowLayoutInfoListener(androidx.core.util.Consumer)
com.google.android.gms.internal.firebase-auth-api.zzfx: com.google.android.gms.internal.firebase-auth-api.zzyj zzf
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
com.google.android.gms.internal.firebase-auth-api.zzlb: int zze
androidx.window.R$attr: int splitMinSmallestWidth
androidx.window.embedding.MatcherUtils: boolean areComponentsMatching$window_release(android.content.ComponentName,android.content.ComponentName)
com.google.android.gms.internal.firebase-auth-api.zzie: com.google.android.gms.internal.firebase-auth-api.zzie zzb
com.google.android.gms.internal.firebase-auth-api.zzht: int zze
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
com.google.android.gms.internal.firebase-auth-api.zzih: com.google.android.gms.internal.firebase-auth-api.zzik zze
androidx.core.view.ViewCompat$Api31Impl: androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat)
com.google.android.gms.dynamite.descriptors.com.google.firebase.auth.ModuleDescriptor: java.lang.String MODULE_ID
androidx.window.embedding.EmbeddingTranslatingCallback: void accept(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceWindowChanged(long,android.view.Surface)
androidx.window.layout.SidecarWindowBackend: SidecarWindowBackend(androidx.window.layout.ExtensionInterfaceCompat)
kotlin.jvm.internal.CallableReference: java.lang.String getName()
com.google.android.gms.internal.firebase-auth-api.zzgp: com.google.android.gms.internal.firebase-auth-api.zzgs zze
com.google.firebase.provider.FirebaseInitProvider: FirebaseInitProvider()
com.google.android.gms.internal.firebase-auth-api.zzit: int zze
androidx.window.core.Version: androidx.window.core.Version UNKNOWN
com.onesignal.OSInAppMessageAction$OSInAppMessageActionUrlType: com.onesignal.OSInAppMessageAction$OSInAppMessageActionUrlType valueOf(java.lang.String)
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference
com.google.android.gms.measurement.internal.zzaw: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.SplitRule: int minSmallestWidth
com.onesignal.JobIntentService$JobServiceEngineImpl: JobIntentService$JobServiceEngineImpl(com.onesignal.JobIntentService)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportBackgroundTintList()
io.flutter.plugins.firebase.core.FlutterFirebasePlugin
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack secondaryActivityStack
com.google.android.gms.internal.measurement.zzfi: com.google.android.gms.internal.measurement.zzfi zza
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
androidx.media.AudioAttributesImplBaseParcelizer: void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel)
androidx.work.impl.utils.futures.AbstractFuture: androidx.work.impl.utils.futures.AbstractFuture$Listener listeners
androidx.window.layout.SidecarWindowBackend$Companion: boolean isSidecarVersionSupported(androidx.window.core.Version)
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
kotlinx.coroutines.CancelledContinuation
com.google.android.gms.internal.measurement.zzgc: com.google.android.gms.internal.measurement.zzkj zzi
androidx.core.view.ViewCompat$Api16Impl: void setHasTransientState(android.view.View,boolean)
kotlinx.coroutines.channels.ArrayChannel: int size
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
kotlinx.coroutines.ChildContinuation
com.google.android.gms.internal.measurement.zzgh: com.google.android.gms.internal.measurement.zzkj zzg
androidx.window.layout.SidecarCompat: boolean validateExtensionInterface()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
com.google.android.gms.internal.measurement.zznc: com.google.android.gms.internal.measurement.zznc[] values()
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthRegistrar: FlutterFirebaseAuthRegistrar()
com.google.android.gms.internal.measurement.zzgc: int zzh
com.onesignal.JobIntentService$CompatWorkEnqueuer
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
androidx.window.core.Version$Companion: Version$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPairRule parseSplitPairRule(android.content.Context,android.content.res.XmlResourceParser)
androidx.work.impl.workers.CombineContinuationsWorker
com.google.android.gms.internal.measurement.zzgc: int zzJ
com.google.firebase.auth.internal.RecaptchaActivity
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet)
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeSetViewportMetrics(long,float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetLeft(android.view.DisplayCutout)
androidx.work.impl.workers.ConstraintTrackingWorker: ConstraintTrackingWorker(android.content.Context,androidx.work.WorkerParameters)
androidx.appcompat.widget.LinearLayoutCompat
androidx.window.embedding.ActivityFilter: java.lang.String toString()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept$lambda-0(androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper,androidx.window.layout.WindowLayoutInfo)
com.onesignal.shortcutbadger.impl.OPPOHomeBader: OPPOHomeBader()
androidx.window.embedding.EmptyEmbeddingComponent: EmptyEmbeddingComponent()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCachedAppInstanceId(com.google.android.gms.internal.measurement.zzcf)
com.google.android.gms.internal.measurement.zzfu: com.google.android.gms.internal.measurement.zzfu zza
androidx.window.layout.FoldingFeature$State$Companion: FoldingFeature$State$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
androidx.core.widget.PopupWindowCompat$Api23Impl: boolean getOverlapAnchor(android.widget.PopupWindow)
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$Orientation getOrientation()
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
com.google.android.gms.internal.firebase-auth-api.zzks
com.onesignal.JobIntentService$JobServiceEngineImpl: boolean onStartJob(android.app.job.JobParameters)
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext _context
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
androidx.window.layout.SidecarCompat$DistinctElementCallback: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface callbackInterface
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController$Companion Companion
androidx.core.view.ViewCompat$Api28Impl: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
android.support.v4.media.RatingCompat
kotlin.jvm.internal.FunctionReference: boolean isInfix()
io.flutter.embedding.engine.FlutterJNI: void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin)
androidx.window.embedding.SplitRule$Api30Impl: androidx.window.embedding.SplitRule$Api30Impl INSTANCE
androidx.window.core.Version: int minor
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
com.google.android.gms.internal.firebase-auth-api.zzob: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzgs: int zze
androidx.core.view.ViewCompat$Api15Impl: boolean hasOnClickListeners(android.view.View)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: java.util.concurrent.Executor executor
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState
androidx.window.core.Version: java.lang.String VERSION_PATTERN_STRING
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
androidx.core.view.ViewCompat$Api16Impl: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener)
kotlinx.coroutines.internal.ScopeCoroutine
io.flutter.embedding.android.FlutterTextureView
com.google.android.gms.internal.firebase-auth-api.zzjo: com.google.android.gms.internal.firebase-auth-api.zzjr zze
androidx.window.layout.FoldingFeature$Orientation
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
com.onesignal.flutter.OneSignalPlugin
com.google.android.gms.internal.firebase-auth-api.zziq: com.google.android.gms.internal.firebase-auth-api.zziq zzb
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
androidx.window.layout.HardwareFoldingFeature$Companion: HardwareFoldingFeature$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity)
com.google.android.gms.internal.measurement.zzgc: long zzW
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
com.google.android.gms.auth.api.signin.internal.SignInHubActivity
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConditionalUserProperty(android.os.Bundle,long)
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
androidx.work.impl.foreground.SystemForegroundService: SystemForegroundService()
androidx.core.view.ViewCompat$Api21Impl: void setZ(android.view.View,float)
com.google.android.gms.internal.firebase-auth-api.zzju: com.google.android.gms.internal.firebase-auth-api.zzjx zzf
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType valueOf(java.lang.String)
com.onesignal.OSNotificationRestoreWorkManager$NotificationRestoreWorker
androidx.fragment.app.Fragment$5
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType valueOf(java.lang.String)
androidx.window.embedding.ActivityFilter: java.lang.String getIntentAction()
androidx.appcompat.widget.Toolbar: void setLogo(int)
com.onesignal.OneSignalStateSynchronizer$UserStateSynchronizerType: com.onesignal.OneSignalStateSynchronizer$UserStateSynchronizerType[] values()
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend globalInstance
com.google.android.gms.internal.firebase-auth-api.zzkm: com.google.android.gms.internal.firebase-auth-api.zzkm zzb
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
com.google.android.gms.measurement.AppMeasurement: com.google.android.gms.measurement.AppMeasurement getInstance(android.content.Context)
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setCurrentScreen(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,java.lang.String,long)
androidx.window.embedding.SplitController: SplitController()
androidx.work.impl.WorkDatabase
com.google.android.gms.common.api.GoogleApiClient
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$202(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: HardwareFoldingFeature$Type$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.gms.internal.firebase-auth-api.zzka: com.google.android.gms.internal.firebase-auth-api.zzyj zzf
com.google.android.gms.internal.measurement.zzej: com.google.android.gms.internal.measurement.zzkj zzh
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.gms.internal.measurement.zzej: int zze
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
com.google.android.gms.internal.measurement.zzgc: java.lang.String zzS
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.gms.measurement.AppMeasurement: int getMaxUserProperties(java.lang.String)
kotlinx.coroutines.AbstractCoroutine
com.google.android.gms.internal.firebase-auth-api.zzhn: com.google.android.gms.internal.firebase-auth-api.zzhn zzb
com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment getChimeraLifecycleFragmentImpl(com.google.android.gms.common.api.internal.LifecycleActivity)
androidx.window.embedding.ActivityFilter: boolean matchesActivity(android.app.Activity)
io.flutter.embedding.engine.FlutterOverlaySurface: int getId()
androidx.work.impl.utils.futures.DirectExecutor: androidx.work.impl.utils.futures.DirectExecutor[] values()
com.onesignal.NotificationOpenedReceiverAndroid22AndOlder: NotificationOpenedReceiverAndroid22AndOlder()
com.google.firebase.auth.internal.RecaptchaActivity: RecaptchaActivity()
androidx.window.embedding.ActivityRule: ActivityRule(java.util.Set,boolean)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity activity
com.google.firebase.auth.EmailAuthCredential: android.os.Parcelable$Creator CREATOR
com.onesignal.JobIntentService$CommandProcessor: java.lang.Void doInBackground(java.lang.Void[])
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$300(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.android.gms.internal.firebase-auth-api.zzle
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView
androidx.window.core.Bounds: boolean equals(java.lang.Object)
androidx.window.embedding.EmbeddingTranslatingCallback
com.onesignal.JobIntentService$JobWorkEnqueuer: JobIntentService$JobWorkEnqueuer(android.content.Context,android.content.ComponentName,int)
androidx.window.layout.SidecarWindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
androidx.window.layout.ActivityCompatHelperApi30: ActivityCompatHelperApi30()
androidx.window.layout.SidecarAdapter: java.lang.String TAG
com.google.android.gms.internal.firebase-auth-api.zzik: com.google.android.gms.internal.firebase-auth-api.zzit zze
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
androidx.fragment.app.FragmentManager$6
com.google.android.gms.common.api.GoogleApiClient: void disconnect()
com.onesignal.JobIntentService$CompatWorkItem: JobIntentService$CompatWorkItem(com.onesignal.JobIntentService,android.content.Intent,int)
com.google.android.gms.internal.measurement.zzeh: int zzf
com.google.android.gms.common.api.GoogleApiActivity: GoogleApiActivity()
io.flutter.view.AccessibilityViewEmbedder: void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
com.google.android.gms.internal.measurement.zzgc
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle lifecycle
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility valueOf(java.lang.String)
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
com.google.android.gms.internal.firebase-auth-api.zzhb: int zze
com.onesignal.JobIntentService$CommandProcessor: com.onesignal.JobIntentService this$0
com.google.firebase.auth.internal.zzr: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzjj: int zzf
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
androidx.window.layout.SidecarCompat$DistinctElementCallback: java.util.concurrent.locks.ReentrantLock lock
com.google.android.gms.internal.measurement.zzfi: int zze
kotlin.jvm.internal.FunctionReference: java.lang.String toString()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView
androidx.core.view.ViewCompat$Api29Impl: java.util.List getSystemGestureExclusionRects(android.view.View)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
com.onesignal.JobIntentService$CompatWorkEnqueuer: void serviceStartReceived()
androidx.core.view.ViewCompat$Api16Impl: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
com.google.android.gms.internal.firebase-auth-api.zzhh
com.google.android.gms.internal.auth-api.zbp: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: void nativeUnregisterTexture(long,long)
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
androidx.window.layout.FoldingFeature$OcclusionType: FoldingFeature$OcclusionType(java.lang.String)
com.google.android.gms.internal.measurement.zzgc: long zzC
com.google.android.gms.internal.firebase-auth-api.zzky: java.lang.String zze
io.flutter.embedding.engine.FlutterJNI: void nativeNotifyLowMemoryWarning(long)
androidx.window.layout.HardwareFoldingFeature
kotlinx.coroutines.InvokeOnCancelling
io.flutter.embedding.engine.FlutterJNI: void onRenderingStopped()
androidx.window.layout.DisplayCompatHelperApi28
android.support.v4.media.session.MediaSessionCompat$Token: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzjx: com.google.android.gms.internal.firebase-auth-api.zzyj zzg
com.google.android.gms.auth.api.signin.RevocationBoundService
io.flutter.embedding.engine.FlutterJNI: void onSurfaceChanged(int,int)
androidx.window.embedding.SplitPairRule: SplitPairRule(java.util.Set,boolean,boolean,boolean,int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.embedding.SplitController: androidx.window.embedding.EmbeddingBackend embeddingBackend
androidx.appcompat.widget.SearchView: int getPreferredWidth()
com.google.android.gms.internal.measurement.zzex: boolean zzh
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetricsCalculator getOrCreate()
com.onesignal.OSNotificationAction$ActionType: com.onesignal.OSNotificationAction$ActionType[] values()
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
io.flutter.view.FlutterCallbackInformation: io.flutter.view.FlutterCallbackInformation lookupCallbackInformation(long)
com.google.android.gms.internal.firebase-auth-api.zzkr: int zzh
androidx.window.core.Version: Version(int,int,int,java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRRect(int,int,int,int,float[])
androidx.window.embedding.ExtensionEmbeddingBackend: void getSplitChangeCallbacks$annotations()
com.google.android.gms.common.internal.zat: android.os.Parcelable$Creator CREATOR
androidx.window.layout.SidecarAdapter$Companion: java.util.List getSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCurrentScreenClass(com.google.android.gms.internal.measurement.zzcf)
androidx.work.impl.background.systemjob.SystemJobService: SystemJobService()
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformViewFactory,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,java.lang.Object,android.view.View$OnFocusChangeListener)
androidx.window.embedding.ExtensionEmbeddingBackend: void access$setGlobalInstance$cp(androidx.window.embedding.ExtensionEmbeddingBackend)
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
android.support.v4.os.ResultReceiver: android.os.Parcelable$Creator CREATOR
com.onesignal.ADMMessageHandler: ADMMessageHandler()
io.flutter.plugins.firebase.auth.FlutterFirebaseAuthRegistrar: java.util.List getComponents()
androidx.window.embedding.SplitRule$Api30Impl: android.graphics.Rect getBounds(android.view.WindowMetrics)
io.flutter.embedding.engine.FlutterJNI: void destroyOverlaySurfaces()
androidx.cardview.widget.CardView: void setMaxCardElevation(float)
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag valueOf(java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
com.google.android.gms.internal.firebase-auth-api.zzga: int zze
com.google.android.gms.internal.firebase-auth-api.zzkr: com.google.android.gms.internal.firebase-auth-api.zzkr zzb
com.google.android.gms.internal.firebase-auth-api.zzht: com.google.android.gms.internal.firebase-auth-api.zzht zzb
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarWindowLayoutInfo(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarWindowLayoutInfo)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void releaseIntercepted()
com.google.android.gms.internal.firebase-auth-api.zzon: android.os.Parcelable$Creator CREATOR
io.flutter.view.AccessibilityViewEmbedder
com.onesignal.shortcutbadger.impl.AdwHomeBadger: AdwHomeBadger()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setUserProperty(java.lang.String,java.lang.String,com.google.android.gms.dynamic.IObjectWrapper,boolean,long)
com.google.firebase.auth.internal.zzag: android.os.Parcelable$Creator CREATOR
androidx.work.WorkInfo$State: androidx.work.WorkInfo$State[] values()
com.google.android.gms.internal.firebase-auth-api.zzju
com.onesignal.JobIntentService$JobServiceEngineImpl: android.os.IBinder compatGetBinder()
androidx.window.layout.WindowInfoTrackerImpl$Companion: WindowInfoTrackerImpl$Companion()
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTimeToLive
androidx.window.embedding.SplitPlaceholderRule: androidx.window.embedding.SplitPlaceholderRule plus$window_release(androidx.window.embedding.ActivityFilter)
androidx.window.layout.WindowInfoTrackerImpl: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
com.google.android.gms.internal.firebase-auth-api.zzgp: com.google.android.gms.internal.firebase-auth-api.zzgp zzb
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
com.google.android.gms.internal.measurement.zzgc: java.lang.String zzae
com.onesignal.ADMMessageHandlerJob: void onUnregistered(android.content.Context,java.lang.String)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: void invokeSuspend$lambda-0(kotlinx.coroutines.channels.Channel,androidx.window.layout.WindowLayoutInfo)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Companion Companion
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization valueOf(java.lang.String)
kotlin.jvm.internal.CallableReference: java.lang.Class owner
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
com.google.android.gms.internal.measurement.zzgc: com.google.android.gms.internal.measurement.zzkh zzU
com.google.android.gms.internal.firebase-auth-api.zzhk
io.flutter.plugin.platform.SingleViewPresentation: boolean startFocused
com.google.android.gms.internal.measurement.zzfy: int zze
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.content.ContextCompat$Api23Impl: int getColor(android.content.Context,int)
androidx.window.layout.FoldingFeature$Orientation: java.lang.String toString()
com.google.android.gms.measurement.AppMeasurement
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
com.onesignal.shortcutbadger.impl.AsusHomeBadger: AsusHomeBadger()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
kotlin.jvm.internal.CallableReference: java.util.List getTypeParameters()
androidx.window.embedding.ActivityStack: ActivityStack(java.util.List,boolean)
androidx.window.layout.SidecarCompat: void unregisterComponentCallback(android.app.Activity)
androidx.window.layout.SidecarWindowBackend: void access$setGlobalInstance$cp(androidx.window.layout.SidecarWindowBackend)
kotlinx.coroutines.android.AndroidExceptionPreHandler
com.onesignal.NotificationOpenedReceiver: NotificationOpenedReceiver()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsRegionalIndicator(int)
com.google.android.gms.internal.measurement.zzeq: int zzf
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
kotlin.coroutines.AbstractCoroutineContextElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
androidx.window.layout.SidecarCompat$Companion: android.os.IBinder getActivityWindowToken$window_release(android.app.Activity)
kotlinx.coroutines.CompletedExceptionally
androidx.fragment.app.DialogFragment: DialogFragment()
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: ExtensionsWindowLayoutInfoAdapter()
androidx.window.embedding.ActivityStack: boolean isEmpty()
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTrackerDecorator decorator
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void resumeWith(java.lang.Object)
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
androidx.window.embedding.EmbeddingTranslatingCallback: void accept(java.util.List)
io.flutter.embedding.engine.FlutterJNI: void onVsync(long,long,long)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean attached
kotlin.coroutines.jvm.internal.ContinuationImpl: void releaseIntercepted()
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService: JobInfoSchedulerService()
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.FoldingFeature translate$window_release(android.app.Activity,androidx.window.extensions.layout.FoldingFeature)
androidx.window.embedding.EmbeddingBackend: java.util.Set getSplitRules()
com.google.android.gms.internal.firebase-auth-api.zzzv: com.google.android.gms.internal.firebase-auth-api.zzzv[] values()
kotlin.jvm.internal.CallableReference: java.lang.Object getBoundReceiver()
androidx.window.layout.SidecarWindowBackend$Companion: void resetInstance()
androidx.window.layout.FoldingFeature$Orientation$Companion
kotlin.jvm.internal.CallableReference: kotlin.reflect.KType getReturnType()
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
com.google.android.gms.internal.measurement.zzgc: boolean zzac
androidx.window.embedding.ActivityRule: androidx.window.embedding.ActivityRule plus$window_release(androidx.window.embedding.ActivityFilter)
androidx.window.embedding.ActivityStack: java.lang.String toString()
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
androidx.work.impl.background.systemalarm.ConstraintProxy: ConstraintProxy()
androidx.appcompat.widget.ContentFrameLayout
kotlinx.coroutines.scheduling.WorkQueue
androidx.window.embedding.ActivityFilter: java.lang.String intentAction
androidx.window.layout.DisplayCompatHelperApi28: androidx.window.layout.DisplayCompatHelperApi28 INSTANCE
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.WindowLayoutInfo translate$window_release(android.app.Activity,androidx.window.extensions.layout.WindowLayoutInfo)
com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType: com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType[] values()
io.flutter.view.AccessibilityViewEmbedder: void cacheVirtualIdMappings(android.view.View,int,int)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KFunction getReflected()
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: ExtensionEmbeddingBackend$SplitListenerWrapper(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.google.android.gms.internal.measurement.zzgf: int zzf
com.google.android.gms.internal.measurement.zzel: java.lang.String zzi
kotlinx.coroutines.JobSupport$Finishing
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
com.google.android.gms.internal.firebase-auth-api.zzht
com.google.android.gms.internal.firebase-auth-api.zzgp
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setEventInterceptor(com.google.android.gms.internal.measurement.zzci)
com.google.android.gms.internal.measurement.zzgh
com.google.android.gms.internal.measurement.zzgc: long zzl
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
androidx.window.embedding.SplitPairFilter: boolean equals(java.lang.Object)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$2
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: HiddenLifecycleReference(androidx.lifecycle.Lifecycle)
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
com.google.android.gms.internal.firebase-auth-api.zzlp: com.google.android.gms.internal.firebase-auth-api.zzlp zzb
androidx.work.impl.utils.futures.AbstractFuture: java.lang.Object value
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock globalLock
androidx.window.layout.SidecarWindowBackend: boolean isActivityRegistered(android.app.Activity)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityDestroyed(com.google.android.gms.dynamic.IObjectWrapper,long)
com.google.android.gms.internal.firebase-auth-api.zzfx
androidx.core.view.ViewCompat$Api28Impl: boolean isScreenReaderFocusable(android.view.View)
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1
com.google.android.gms.internal.measurement.zzfs: java.lang.String zzg
androidx.window.core.Version$Companion: androidx.window.core.Version parse(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void ensureRunningOnMainThread()
androidx.legacy.content.WakefulBroadcastReceiver: WakefulBroadcastReceiver()
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.onesignal.SyncService: SyncService()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityStopped(com.google.android.gms.dynamic.IObjectWrapper,long)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
androidx.window.layout.FoldingFeature
com.google.android.gms.internal.measurement.zzfs: com.google.android.gms.internal.measurement.zzkj zzf
com.google.android.gms.internal.measurement.zzgc: java.lang.String zzu
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
com.google.android.gms.common.api.internal.zzd: zzd()
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] values()
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
com.google.android.gms.internal.measurement.zzfy: com.google.android.gms.internal.measurement.zzfm zzh
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
androidx.window.embedding.SplitInfo: int hashCode()
com.onesignal.JobIntentService$JobServiceEngineImpl: boolean DEBUG
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
androidx.window.layout.WindowInfoTrackerDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)
androidx.core.view.ViewCompat$Api16Impl: boolean hasTransientState(android.view.View)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: WindowInfoTrackerCallbackAdapter(androidx.window.layout.WindowInfoTracker)
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int)
kotlin.jvm.internal.CallableReference: java.util.List getParameters()
com.onesignal.shortcutbadger.impl.ZukHomeBadger
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
com.google.android.gms.internal.firebase-auth-api.zzgm: com.google.android.gms.internal.firebase-auth-api.zzyj zzg
io.flutter.plugin.platform.SingleViewPresentation: int viewId
com.google.android.gms.measurement.AppMeasurementReceiver
com.onesignal.shortcutbadger.impl.EverythingMeHomeBadger
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty
androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getHINGE()
com.google.android.gms.measurement.internal.zzau: android.os.Parcelable$Creator CREATOR
com.onesignal.OSTrigger$OSTriggerKind: com.onesignal.OSTrigger$OSTriggerKind[] values()
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: java.util.WeakHashMap mActivityWindowLayoutInfo
android.support.v4.media.session.PlaybackStateCompat$CustomAction: android.os.Parcelable$Creator CREATOR
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreFling(android.view.View,float,float)
com.google.android.gms.internal.measurement.zzfm
androidx.core.view.ViewCompat$Api21Impl: java.lang.String getTransitionName(android.view.View)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI spawn(java.lang.String,java.lang.String,java.lang.String,java.util.List)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType[] values()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$500(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.window.R$attr
com.google.android.gms.safetynet.zzh: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.ActivityFilter: int hashCode()
io.flutter.embedding.engine.FlutterJNI: void setSemanticsEnabled(boolean)
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
com.google.android.gms.internal.measurement.zzgc: long zzk
com.onesignal.LocationController$PermissionType: com.onesignal.LocationController$PermissionType[] values()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
androidx.window.layout.WindowInfoTracker$Companion: void reset()
com.google.android.gms.internal.firebase-auth-api.zzoz: android.os.Parcelable$Creator CREATOR
androidx.core.view.ViewCompat$Api21Impl: void setNestedScrollingEnabled(android.view.View,boolean)
com.google.android.gms.internal.measurement.zzes: int zze
androidx.window.R$styleable: int ActivityRule_alwaysExpand
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getAppInstanceId(com.google.android.gms.internal.measurement.zzcf)
com.google.android.gms.internal.firebase-auth-api.zzjd
com.onesignal.ADMMessageHandlerJob
androidx.fragment.app.FragmentActivity: FragmentActivity()
androidx.appcompat.widget.SearchView: void setInputType(int)
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason valueOf(java.lang.String)
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String previousCompletedSplashIsolate
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.FlutterJNI: java.lang.Long nativeShellHolderId
com.onesignal.JobIntentService$CompatWorkEnqueuer: JobIntentService$CompatWorkEnqueuer(android.content.Context,android.content.ComponentName)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDeviceState(androidx.window.sidecar.SidecarDeviceState,androidx.window.sidecar.SidecarDeviceState)
androidx.window.R$styleable: int SplitPairFilter_primaryActivityName
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: AppMeasurementDynamiteService()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
io.flutter.embedding.engine.FlutterJNI: void nativeLoadDartDeferredLibrary(long,int,java.lang.String[])
androidx.window.core.Version: java.lang.String getDescription()
io.flutter.view.AccessibilityViewEmbedder: boolean performAction(int,int,android.os.Bundle)
com.google.android.gms.internal.measurement.zzex: com.google.android.gms.internal.measurement.zzkj zzi
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointVariantSelector(int)
com.google.android.gms.internal.firebase-auth-api.zzhq: com.google.android.gms.internal.firebase-auth-api.zzyj zzf
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackClassName
androidx.window.embedding.ActivityRule: java.util.Set filters
com.onesignal.JobIntentService$WorkEnqueuer: void ensureJobId(int)
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateJavaAssetManager(long,android.content.res.AssetManager,java.lang.String)
androidx.window.core.Version: androidx.window.core.Version access$getCURRENT$cp()
androidx.window.layout.WindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
kotlinx.coroutines.NodeList
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageEmptyResponseCallback(long,int)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
androidx.appcompat.widget.Toolbar: int getPopupTheme()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void initForTests(java.util.Map)
kotlin.jvm.internal.Lambda: Lambda(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
com.google.android.gms.internal.measurement.zzfe: int zze
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface surface
androidx.core.content.ContextCompat$Api23Impl: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
androidx.window.embedding.SplitPairRule: boolean clearTop
androidx.window.layout.WindowMetrics: androidx.window.core.Bounds _bounds
com.google.android.gms.internal.firebase-auth-api.zzkv: com.google.android.gms.internal.firebase-auth-api.zzkv zzb
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity)
androidx.appcompat.widget.SearchView$SearchAutoComplete
com.onesignal.JobIntentService$CommandProcessor: void onCancelled(java.lang.Void)
kotlinx.coroutines.JobSupport$ChildCompletion
com.google.android.gms.internal.measurement.zzfe: com.google.android.gms.internal.measurement.zzkj zzn
com.google.android.gms.internal.measurement.zzgs: com.google.android.gms.internal.measurement.zzkj zzf
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
com.google.android.datatransport.cct.CctBackendFactory
androidx.core.app.NotificationCompat$Builder: android.app.Notification mNotification
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: FlutterFirebasePluginRegistry()
com.onesignal.shortcutbadger.impl.VivoHomeBadger: VivoHomeBadger()
androidx.work.impl.utils.futures.DirectExecutor: androidx.work.impl.utils.futures.DirectExecutor valueOf(java.lang.String)
androidx.window.layout.SidecarCompat$DistinctElementCallback: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
com.google.android.gms.internal.firebase-auth-api.zzki
com.google.android.gms.internal.firebase-auth-api.zzki: com.google.android.gms.internal.firebase-auth-api.zzki zzb
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.ExtensionEmbeddingBackend getInstance()
androidx.window.layout.ActivityCompatHelperApi24: ActivityCompatHelperApi24()
androidx.window.layout.SidecarWindowBackend$Companion: SidecarWindowBackend$Companion()
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mAppId
androidx.window.layout.SidecarCompat: androidx.window.layout.WindowLayoutInfo getWindowLayoutInfo(android.app.Activity)
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend access$getGlobalInstance$cp()
io.flutter.embedding.engine.FlutterJNI: void nativeSetSemanticsEnabled(long,boolean)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointRegionalIndicator(int)
androidx.window.embedding.SplitPairFilter: java.lang.String secondaryActivityIntentAction
com.google.android.gms.internal.firebase-auth-api.zzjd: com.google.android.gms.internal.firebase-auth-api.zzjd zzb
androidx.window.layout.FoldingFeature$OcclusionType$Companion: FoldingFeature$OcclusionType$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.work.OutOfQuotaPolicy: androidx.work.OutOfQuotaPolicy valueOf(java.lang.String)
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode valueOf(java.lang.String)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.concurrent.Executor executor
androidx.cardview.widget.CardView: void setUseCompatPadding(boolean)
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
androidx.cardview.widget.CardView: void setCardBackgroundColor(android.content.res.ColorStateList)
com.google.android.gms.measurement.AppMeasurement: void beginAdUnitExposure(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.ActivityRule parseSplitActivityRule(android.content.Context,android.content.res.XmlResourceParser)
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Parcelable$Creator CREATOR
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
com.google.firebase.messaging.FirebaseMessaging: com.google.firebase.messaging.FirebaseMessaging getInstance(com.google.firebase.FirebaseApp)
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
androidx.window.embedding.MatcherUtils: MatcherUtils()
androidx.core.widget.EdgeEffectCompat$Api31Impl: float onPullDistance(android.widget.EdgeEffect,float,float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
com.google.android.gms.measurement.AppMeasurement: void endAdUnitExposure(java.lang.String)
android.support.v4.media.session.PlaybackStateCompat: android.os.Parcelable$Creator CREATOR
androidx.core.view.ViewCompat$Api17Impl: void setPaddingRelative(android.view.View,int,int,int,int)
com.google.android.gms.common.internal.TelemetryData: android.os.Parcelable$Creator CREATOR
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
com.google.android.gms.internal.measurement.zzgc: boolean zzA
androidx.work.impl.diagnostics.DiagnosticsReceiver: DiagnosticsReceiver()
com.google.android.gms.internal.measurement.zzfg: com.google.android.gms.internal.measurement.zzfg zza
androidx.lifecycle.FullLifecycleObserverAdapter
androidx.savedstate.SavedStateRegistry$1
com.google.android.gms.internal.measurement.zzgl: double zzk
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifierBase(int)
androidx.window.embedding.SplitController$Companion: void initialize(android.content.Context,int)
kotlin.jvm.internal.FunctionReference: int getArity()
androidx.appcompat.widget.ScrollingTabContainerView: void setTabSelected(int)
com.google.android.gms.internal.measurement.zzfq: long zzg
androidx.window.layout.WindowMetricsCalculator
androidx.window.embedding.SplitPairFilter
androidx.window.core.Version: androidx.window.core.Version VERSION_0_1
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
androidx.window.layout.HardwareFoldingFeature: HardwareFoldingFeature(androidx.window.core.Bounds,androidx.window.layout.HardwareFoldingFeature$Type,androidx.window.layout.FoldingFeature$State)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
io.flutter.embedding.engine.FlutterJNI: void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler)
com.google.android.gms.internal.firebase-auth-api.zzof: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout rootView
androidx.window.layout.DisplayCompatHelperApi17: DisplayCompatHelperApi17()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$400(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
com.onesignal.WebViewManager$OSJavaScriptInterface
com.onesignal.PermissionsActivity
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void install()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
androidx.window.R$styleable: int[] SplitPlaceholderRule
kotlinx.coroutines.channels.AbstractChannel$enqueueReceiveInternal$$inlined$addLastIfPrevAndIf$1
androidx.work.impl.utils.futures.AbstractFuture$Waiter: androidx.work.impl.utils.futures.AbstractFuture$Waiter next
androidx.window.core.Bounds: int right
com.google.android.gms.common.ConnectionResult: android.os.Parcelable$Creator CREATOR
com.onesignal.OneSignalStateSynchronizer$UserStateSynchronizerType: com.onesignal.OneSignalStateSynchronizer$UserStateSynchronizerType valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzej: com.google.android.gms.internal.measurement.zzej zza
androidx.window.embedding.EmbeddingInterfaceCompat: void setSplitRules(java.util.Set)
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation VERTICAL
androidx.appcompat.widget.AppCompatButton
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void beginAdUnitExposure(java.lang.String,long)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsP$window_release(android.app.Activity)
com.google.android.gms.safetynet.zzd: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: long nativeAttach(io.flutter.embedding.engine.FlutterJNI)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
com.onesignal.shortcutbadger.impl.ZukHomeBadger: ZukHomeBadger()
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
androidx.window.embedding.SplitPlaceholderRule: SplitPlaceholderRule(java.util.Set,android.content.Intent,int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.ExtensionWindowLayoutInfoBackend
androidx.window.embedding.SplitInfo: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzgy
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
androidx.versionedparcelable.CustomVersionedParcelable
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinSmallestWidth
com.google.android.gms.internal.firebase-auth-api.zzhq: com.google.android.gms.internal.firebase-auth-api.zzhq zzb
com.google.android.gms.internal.measurement.zzfm: java.lang.String zzi
androidx.window.layout.WindowMetricsCalculatorDecorator
androidx.activity.ComponentActivity$5
com.google.android.gms.safetynet.HarmfulAppsData: android.os.Parcelable$Creator CREATOR
kotlin.jvm.internal.FunctionReference: boolean isOperator()
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
androidx.window.layout.ExtensionWindowLayoutInfoBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper
androidx.core.view.ViewCompat$Api19Impl: boolean isLayoutDirectionResolved(android.view.View)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getUserProperties(java.lang.String,java.lang.String,boolean,com.google.android.gms.internal.measurement.zzcf)
com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform: com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform valueOf(java.lang.String)
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: java.lang.Object invoke(java.lang.Object)
androidx.media.AudioAttributesImplBase
kotlinx.coroutines.channels.ConflatedChannel
com.google.android.gms.internal.measurement.zzgf: com.google.android.gms.internal.measurement.zzkj zzg
com.google.android.gms.internal.measurement.zzes: boolean zzj
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: WindowInfoTrackerCallbackAdapter$addListener$1$1(kotlinx.coroutines.flow.Flow,androidx.core.util.Consumer,kotlin.coroutines.Continuation)
androidx.window.layout.WindowMetrics: android.graphics.Rect getBounds()
io.flutter.embedding.engine.FlutterJNI: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable getReflected()
com.google.android.gms.internal.firebase-auth-api.zzov: android.os.Parcelable$Creator CREATOR
com.onesignal.influence.domain.OSInfluenceType: com.onesignal.influence.domain.OSInfluenceType valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton
com.google.android.gms.internal.measurement.zzfg: java.lang.String zzf
io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus: io.flutter.plugins.urllauncher.UrlLauncher$LaunchStatus valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzgs
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map activityToListeners
io.flutter.embedding.engine.FlutterOverlaySurface: FlutterOverlaySurface(int,android.view.Surface)
androidx.window.layout.WindowLayoutInfo
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
androidx.core.graphics.drawable.IconCompatParcelizer
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$600(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
kotlinx.coroutines.InvokeOnCancelling: int _invoked
androidx.window.layout.HardwareFoldingFeature$Companion: void validateFeatureBounds$window_release(androidx.window.core.Bounds)
androidx.window.layout.SidecarCompat: java.util.Map access$getWindowListenerRegisteredContexts$p(androidx.window.layout.SidecarCompat)
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: AnalyticsConnectorRegistrar()
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
com.google.android.gms.internal.firebase-auth-api.zzka: com.google.android.gms.internal.firebase-auth-api.zzka zzb
com.google.android.gms.internal.auth-api.zbu: android.os.Parcelable$Creator CREATOR
androidx.window.layout.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
androidx.media.AudioAttributesCompat
com.google.android.gms.internal.firebase-auth-api.zzwl: android.os.Parcelable$Creator CREATOR
com.google.android.gms.measurement.AppMeasurement: java.util.List getConditionalUserProperties(java.lang.String,java.lang.String)
com.google.android.gms.internal.measurement.zzgc: java.lang.String zzQ
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCurrentScreenName(com.google.android.gms.internal.measurement.zzcf)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
com.google.android.gms.internal.firebase-auth-api.zzgv
androidx.window.layout.SidecarCompat$Companion: androidx.window.core.Version getSidecarVersion()
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend$Companion Companion
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity)
com.onesignal.OSReceiveReceiptController$ReceiveReceiptWorker
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityIntentPredicates(java.util.Set)
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: SidecarWindowBackend$ExtensionListenerImpl(androidx.window.layout.SidecarWindowBackend)
com.google.firebase.encoders.proto.Protobuf$IntEncoding: com.google.firebase.encoders.proto.Protobuf$IntEncoding valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzgm
androidx.window.embedding.SplitPairRule: boolean getFinishPrimaryWithSecondary()
com.onesignal.OneSignal$SMSErrorType: com.onesignal.OneSignal$SMSErrorType valueOf(java.lang.String)
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarAdapter access$getSidecarAdapter$p(androidx.window.layout.SidecarCompat)
androidx.appcompat.widget.SearchView: int getInputType()
androidx.cardview.widget.CardView: android.content.res.ColorStateList getCardBackgroundColor()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
io.flutter.view.AccessibilityViewEmbedder: boolean onAccessibilityHoverEvent(int,android.view.MotionEvent)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
com.google.android.gms.internal.measurement.zzgc: int zzK
androidx.window.layout.SidecarWindowBackend$Companion
com.onesignal.ADMMessageHandlerJob: void onMessage(android.content.Context,android.content.Intent)
androidx.window.embedding.EmbeddingCompat: boolean DEBUG
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
com.google.android.gms.internal.measurement.zzfo: int zze
com.onesignal.JobIntentService$WorkEnqueuer: void serviceProcessingStarted()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
com.google.android.gms.internal.measurement.zzkc: java.util.Map zza
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
com.google.android.gms.internal.measurement.zzej
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String)
com.onesignal.ADMMessageHandler: void onUnregistered(java.lang.String)
com.onesignal.JobIntentService$CompatWorkEnqueuer: void serviceProcessingStarted()
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View,int,int,int,int)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
com.google.android.gms.internal.firebase-auth-api.zzpj: android.os.Parcelable$Creator CREATOR
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
io.flutter.embedding.engine.FlutterJNI: java.util.Set engineLifecycleListeners
com.google.android.gms.internal.firebase-auth-api.zzki: int zzg
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag valueOf(java.lang.String)
io.flutter.embedding.android.FlutterView
androidx.core.app.RemoteActionCompat
androidx.window.embedding.SplitInfo: float splitRatio
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View view
androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String toString()
com.google.android.gms.internal.firebase-auth-api.zzhq: int zze
com.onesignal.FocusTimeController$FocusEventType: com.onesignal.FocusTimeController$FocusEventType valueOf(java.lang.String)
kotlinx.coroutines.JobCancellingNode
com.google.firebase.installations.FirebaseInstallationsRegistrar
androidx.window.embedding.EmbeddingBackend: void registerRule(androidx.window.embedding.EmbeddingRule)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
androidx.window.layout.HardwareFoldingFeature$Type: HardwareFoldingFeature$Type(java.lang.String)
androidx.window.embedding.SplitRule: int hashCode()
com.google.android.gms.internal.firebase-auth-api.zzhh: int zzf
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: com.google.firebase.analytics.connector.AnalyticsConnector lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundResource(int)
androidx.core.content.ContextCompat$Api26Impl: android.content.ComponentName startForegroundService(android.content.Context,android.content.Intent)
com.google.android.gms.internal.measurement.zzfq
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
kotlin.jvm.internal.FunctionReference: boolean isExternal()
androidx.window.R$styleable: int SplitPairRule_splitRatio
com.google.firebase.auth.GoogleAuthCredential: android.os.Parcelable$Creator CREATOR
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: java.util.List getComponents()
com.google.android.gms.internal.measurement.zzfq: int zzf
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcel)
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: int MODULE_VERSION
androidx.window.R$id: int rtl
androidx.window.embedding.SplitPlaceholderRule
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation getCompletion()
com.google.android.gms.internal.measurement.zzgj: com.google.android.gms.internal.measurement.zzgj zza
androidx.window.embedding.ActivityRule: java.util.Set getFilters()
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
androidx.window.core.Bounds: android.graphics.Rect toRect()
androidx.core.view.ViewCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.View)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageEmptyResponseCallback(int)
androidx.activity.ComponentActivity$4
com.google.android.gms.internal.firebase-auth-api.zzie
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.google.android.gms.internal.measurement.zzfu: long zzg
androidx.window.embedding.ActivityStack: java.util.List getActivities$window_release()
androidx.window.embedding.SplitController: void access$setGlobalInstance$cp(androidx.window.embedding.SplitController)
com.google.android.gms.internal.firebase-auth-api.zzoj: android.os.Parcelable$Creator CREATOR
com.google.android.gms.measurement.internal.zzlo: android.os.Parcelable$Creator CREATOR
com.google.firebase.auth.UserProfileChangeRequest: android.os.Parcelable$Creator CREATOR
androidx.window.R$attr: int finishPrimaryWithSecondary
com.google.android.gms.internal.firebase-auth-api.zzki: java.lang.String zzf
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List mutators
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
androidx.window.embedding.SplitPairRule: boolean getClearTop()
androidx.window.layout.WindowBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.google.firebase.auth.internal.GenericIdpActivity: GenericIdpActivity()
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
com.google.android.gms.auth.api.signin.internal.SignInConfiguration: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzgv: com.google.android.gms.internal.firebase-auth-api.zzgv zzb
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: ExtensionEmbeddingBackend$EmbeddingCallbackImpl(androidx.window.embedding.ExtensionEmbeddingBackend)
androidx.core.content.ContextCompat$Api24Impl: android.content.Context createDeviceProtectedStorageContext(android.content.Context)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: kotlinx.coroutines.flow.Flow $flow
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: java.util.Map consumerToJobMap
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: HardwareFoldingFeature$Type$Companion()
com.google.firebase.messaging.EnhancedIntentService: EnhancedIntentService()
com.google.android.gms.internal.measurement.zzfy: com.google.android.gms.internal.measurement.zzfy zza
io.flutter.embedding.engine.FlutterJNI: void notifyLowMemoryWarning()
androidx.core.view.ViewCompat$Api17Impl: int getPaddingStart(android.view.View)
com.google.android.gms.internal.measurement.zzgs: com.google.android.gms.internal.measurement.zzgs zza
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
androidx.core.view.ViewCompat$Api16Impl: void setBackground(android.view.View,android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
androidx.window.embedding.ActivityRule: boolean getAlwaysExpand()
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
com.google.android.gms.internal.firebase-auth-api.zziy: com.google.android.gms.internal.firebase-auth-api.zzks zzf
com.google.android.gms.internal.measurement.zzgl: long zzf
com.google.android.gms.internal.measurement.zzgo: com.google.android.gms.internal.measurement.zzkj zze
com.google.android.gms.internal.measurement.zzfw: com.google.android.gms.internal.measurement.zzkj zzk
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
androidx.appcompat.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)
com.google.android.gms.internal.firebase-auth-api.zzlp: int zze
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Object onCloseHandler
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: java.util.concurrent.ExecutorService cachedThreadPool
com.onesignal.OneSignal$LOG_LEVEL: com.onesignal.OneSignal$LOG_LEVEL valueOf(java.lang.String)
io.flutter.embedding.android.FlutterView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
kotlin.jvm.internal.FunctionReference: int arity
androidx.window.core.Version: androidx.window.core.Version access$getVERSION_0_1$cp()
androidx.core.view.ViewCompat$Api17Impl: void setLayoutDirection(android.view.View,int)
com.google.android.gms.internal.measurement.zzes: com.google.android.gms.internal.measurement.zzes zza
com.onesignal.OSTrigger$OSTriggerOperator: com.onesignal.OSTrigger$OSTriggerOperator valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzkf: com.google.android.gms.internal.firebase-auth-api.zzkf zzb
io.flutter.embedding.engine.FlutterJNI: void runBundleAndSnapshotFromLibrary(java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
io.flutter.embedding.engine.FlutterJNI: java.lang.String TAG
io.flutter.embedding.engine.FlutterJNI: void onFirstFrame()
androidx.window.layout.ActivityCompatHelperApi30: androidx.window.layout.ActivityCompatHelperApi30 INSTANCE
com.google.android.gms.internal.firebase-auth-api.zzjr: int zze
androidx.appcompat.widget.AppCompatEditText
androidx.window.layout.WindowMetricsCalculator$Companion: void overrideDecorator(androidx.window.layout.WindowMetricsCalculatorDecorator)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setInstanceIdProvider(com.google.android.gms.internal.measurement.zzck)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.gms.internal.firebase-auth-api.zzgg: com.google.android.gms.internal.firebase-auth-api.zzgg zzb
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceChanged(long,int,int)
androidx.loader.content.ModernAsyncTask$Status: androidx.loader.content.ModernAsyncTask$Status valueOf(java.lang.String)
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
com.google.android.gms.internal.firebase-auth-api.zznh: android.os.Parcelable$Creator CREATOR
androidx.window.layout.SidecarAdapter
io.flutter.embedding.engine.FlutterJNI: io.flutter.view.FlutterCallbackInformation nativeLookupCallbackInformation(long)
androidx.appcompat.widget.AppCompatCheckBox: int getCompoundPaddingLeft()
com.google.android.gms.internal.firebase-auth-api.zzjd: com.google.android.gms.internal.firebase-auth-api.zzjj zzf
com.onesignal.JobIntentService$CommandProcessor: void onPostExecute(java.lang.Void)
androidx.work.Worker
androidx.lifecycle.CompositeGeneratedAdaptersObserver
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type getType$window_release()
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
com.google.android.gms.internal.firebase-auth-api.zznp: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.firebase-auth-api.zzki: boolean zzh
com.google.android.gms.internal.measurement.zzfw: com.google.android.gms.internal.measurement.zzfw zza
com.onesignal.JobIntentService$CompatJobEngine: com.onesignal.JobIntentService$GenericWorkItem dequeueWork()
com.google.android.gms.internal.measurement.zzgc: com.google.android.gms.internal.measurement.zzgc zze
androidx.window.core.Version: int getMinor()
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void registerPlugin(java.lang.String,io.flutter.plugins.firebase.core.FlutterFirebasePlugin)
androidx.work.ArrayCreatingInputMerger: ArrayCreatingInputMerger()
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
androidx.window.layout.SidecarCompat$FirstAttachAdapter: void onViewDetachedFromWindow(android.view.View)
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
com.google.android.gms.common.api.Scope: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.reflect.Method preHandler()
com.google.android.gms.internal.firebase-auth-api.zzin
kotlin.jvm.internal.CallableReference: java.lang.Object callBy(java.util.Map)
com.onesignal.JobIntentService$JobWorkEnqueuer: android.app.job.JobScheduler mJobScheduler
androidx.appcompat.widget.AppCompatSpinner
com.onesignal.JobIntentService$JobServiceEngineImpl: java.lang.Object mLock
com.google.android.gms.internal.firebase-auth-api.zzkf: com.google.android.gms.internal.firebase-auth-api.zzyj zzf
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
kotlin.jvm.internal.FunctionReference: FunctionReference(int)
com.google.android.gms.internal.firebase-auth-api.zzki: java.lang.String zze
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
kotlinx.coroutines.channels.Send
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
com.google.android.gms.internal.firebase-auth-api.zzkm
com.google.android.gms.common.annotation.KeepName
com.onesignal.shortcutbadger.impl.XiaomiHomeBadger: XiaomiHomeBadger()
androidx.window.layout.FoldingFeature$Orientation$Companion: FoldingFeature$Orientation$Companion()
com.google.android.gms.common.internal.zav: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback
io.flutter.embedding.engine.FlutterJNI: boolean nativeGetIsSoftwareRenderingEnabled()
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
androidx.window.layout.SidecarWindowBackend: void getWindowLayoutChangeCallbacks$annotations()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate accessibilityDelegate
androidx.lifecycle.ReflectiveGenericLifecycleObserver
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
androidx.window.embedding.EmbeddingAdapter: EmbeddingAdapter()
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend globalInstance
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.ExtensionsWindowLayoutInfoAdapter INSTANCE
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap decodeImage(java.nio.ByteBuffer,long)
com.onesignal.JobIntentService$CompatWorkEnqueuer: android.os.PowerManager$WakeLock mLaunchWakeLock
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
kotlinx.coroutines.DefaultExecutor
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
androidx.core.widget.EdgeEffectCompat$Api31Impl: float getDistance(android.widget.EdgeEffect)
androidx.window.embedding.SplitController: SplitController(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.gms.internal.firebase-auth-api.zzwf: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgc: int zzf
io.flutter.view.FlutterCallbackInformation: FlutterCallbackInformation(java.lang.String,java.lang.String,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeCleanupMessageData(long)
androidx.core.view.ViewCompat$Api19Impl: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
kotlinx.coroutines.scheduling.CoroutineScheduler
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: androidx.window.layout.WindowMetricsCalculator$Companion$reset$1 INSTANCE
com.google.android.gms.internal.firebase-auth-api.zzzm: com.google.android.gms.internal.firebase-auth-api.zzabv zzc
kotlin.jvm.internal.CallableReference: kotlin.reflect.KDeclarationContainer getOwner()
io.flutter.embedding.engine.FlutterJNI: void nativeImageHeaderCallback(long,int,int)
com.google.android.gms.measurement.AppMeasurement: java.util.Map getUserProperties(java.lang.String,java.lang.String,boolean)
androidx.window.layout.SidecarCompat$TranslatingCallback: androidx.window.layout.SidecarCompat this$0
com.google.android.gms.internal.measurement.zzgc: java.lang.String zzp
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat windowExtension
com.google.android.gms.internal.firebase-auth-api.zzih: com.google.android.gms.internal.firebase-auth-api.zzih zzb
com.google.android.gms.internal.firebase-auth-api.zznl: android.os.Parcelable$Creator CREATOR
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
androidx.window.embedding.ActivityFilter: ActivityFilter(android.content.ComponentName,java.lang.String)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
com.google.firebase.auth.FirebaseAuth: com.google.firebase.auth.FirebaseAuth getInstance(com.google.firebase.FirebaseApp)
androidx.window.core.Bounds: Bounds(android.graphics.Rect)
com.onesignal.JobIntentService$JobWorkEnqueuer: void enqueueWork(android.content.Intent)
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup()
androidx.window.layout.EmptyDecorator: androidx.window.layout.EmptyDecorator INSTANCE
androidx.window.R: R()
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
androidx.window.layout.WindowMetrics: WindowMetrics(androidx.window.core.Bounds)
com.google.android.gms.internal.firebase-auth-api.zzgj
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowBackend access$getWindowBackend$p(androidx.window.layout.WindowInfoTrackerImpl)
com.google.android.gms.internal.measurement.zzgl: int zze
androidx.window.embedding.SplitPairFilter: android.content.ComponentName getSecondaryActivityName()
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
io.flutter.embedding.engine.FlutterJNI: void setAsyncWaitForVsyncDelegate(io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityPairPredicates(java.util.Set)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List finalClippingPaths
androidx.window.embedding.SplitRule: int minWidth
androidx.window.layout.SidecarCompat$DistinctElementCallback: SidecarCompat$DistinctElementCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
com.google.android.gms.internal.firebase-auth-api.zzhh: int zze
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation HORIZONTAL
android.support.v4.media.session.MediaSessionCompat$QueueItem
com.google.android.gms.internal.firebase-auth-api.zzgd: int zze
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
com.onesignal.JobIntentService$CompatWorkItem
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper: android.os.Parcelable$Creator CREATOR
androidx.window.layout.SidecarCompat$FirstAttachAdapter: androidx.window.layout.SidecarCompat sidecarCompat
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: FlutterMutatorsStack()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
com.onesignal.JobIntentService$CompatJobEngine
com.onesignal.FCMIntentJobService
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle splashScreenState
androidx.window.R$attr: int alwaysExpand
androidx.window.layout.SidecarAdapter: androidx.window.layout.WindowLayoutInfo translate(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarDeviceState)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: ExtensionEmbeddingBackend$Companion()
com.onesignal.JobIntentService$JobServiceEngineImpl: com.onesignal.JobIntentService$GenericWorkItem dequeueWork()
androidx.window.embedding.SplitPairRule: androidx.window.embedding.SplitPairRule plus$window_release(androidx.window.embedding.SplitPairFilter)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State state
androidx.media.AudioAttributesImplApi21Parcelizer
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void setOnDescendantFocusChangeListener(android.view.View$OnFocusChangeListener)
com.google.android.gms.internal.measurement.zzgc: long zzV
androidx.window.R$styleable: int[] ActivityFilter
androidx.window.embedding.EmbeddingCompat: void setSplitRules(java.util.Set)
androidx.core.content.ContextCompat$Api16Impl: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)
kotlinx.coroutines.channels.Receive
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzik: com.google.android.gms.internal.firebase-auth-api.zzie zzf
androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
io.flutter.plugins.GeneratedPluginRegistrant: GeneratedPluginRegistrant()
android.support.v4.media.MediaMetadataCompat
com.google.android.gms.internal.measurement.zzgh: com.google.android.gms.internal.measurement.zzki zze
androidx.window.core.Version$bigInteger$2: java.lang.Object invoke()
androidx.window.embedding.MatcherUtils: boolean wildcardMatch(java.lang.String,java.lang.String)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine getAttachedFlutterEngine()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
androidx.window.layout.SidecarCompat: SidecarCompat(androidx.window.sidecar.SidecarInterface,androidx.window.layout.SidecarAdapter)
androidx.appcompat.widget.ActionBarContainer
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType valueOf(java.lang.String)
androidx.window.embedding.EmbeddingBackend
com.google.android.gms.internal.measurement.zzfe: com.google.android.gms.internal.measurement.zzkj zzk
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key getKey()
io.flutter.embedding.engine.FlutterJNI: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus valueOf(java.lang.String)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer getCallback()
com.google.android.gms.dynamite.descriptors.com.google.firebase.auth.ModuleDescriptor
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
androidx.appcompat.app.AlertController$RecycleListView
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowBackend windowBackend$window_release(android.content.Context)
androidx.core.view.ViewCompat$Api16Impl: boolean hasOverlappingRendering(android.view.View)
androidx.core.view.ViewCompat$Api19Impl: boolean isLaidOut(android.view.View)
com.google.android.gms.internal.firebase-auth-api.zzlj: com.google.android.gms.internal.firebase-auth-api.zzzr zzf
com.google.android.gms.internal.firebase-auth-api.zzfx: int zze
com.google.android.gms.internal.measurement.zzeh: boolean zzj
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry
com.google.android.gms.internal.firebase-auth-api.zzhn: int zze
com.google.android.gms.internal.firebase-auth-api.zzjg: int zzf
androidx.window.embedding.SplitInfo: boolean contains(android.app.Activity)
com.google.android.gms.internal.firebase-auth-api.zzgs: com.google.android.gms.internal.firebase-auth-api.zzgs zzb
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$602(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.View)
com.onesignal.JobIntentService$JobServiceEngineImpl: boolean onStopJob(android.app.job.JobParameters)
androidx.window.embedding.SplitInfo: SplitInfo(androidx.window.embedding.ActivityStack,androidx.window.embedding.ActivityStack,float)
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetricsCalculatorCompat INSTANCE
kotlin.jvm.internal.CallableReference: java.lang.Object call(java.lang.Object[])
com.google.android.gms.internal.firebase-auth-api.zzga: com.google.android.gms.internal.firebase-auth-api.zzgd zzf
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void release()
com.google.android.gms.internal.measurement.zzgc: java.lang.String zzq
io.flutter.embedding.engine.FlutterJNI: void markTextureFrameAvailable(long)
android.support.v4.media.MediaDescriptionCompat
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
com.google.android.gms.internal.firebase-auth-api.zzjr: com.google.android.gms.internal.firebase-auth-api.zzjr zzb
androidx.cardview.widget.CardView: void setMinimumWidth(int)
androidx.window.layout.SidecarWindowBackend: java.lang.String TAG
androidx.window.R$attr: int finishSecondaryWithPrimary
androidx.window.R
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.google.android.gms.internal.firebase-auth-api.zzjg: int zzg
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
androidx.window.layout.SidecarCompat: void registerConfigurationChangeListener(android.app.Activity)
com.onesignal.shortcutbadger.impl.EverythingMeHomeBadger: EverythingMeHomeBadger()
com.google.android.gms.internal.measurement.zzgc: java.lang.String zzr
android.support.v4.media.MediaMetadataCompat: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.gms.internal.measurement.zzfc: int zze
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery
androidx.window.java.R
androidx.window.core.Bounds: int top
androidx.window.embedding.EmbeddingCompat$Companion: EmbeddingCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] values()
kotlinx.coroutines.DispatchedCoroutine: int _decision
androidx.work.BackoffPolicy: androidx.work.BackoffPolicy valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzgx
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTriggeredTimestamp
androidx.window.core.Version$bigInteger$2: androidx.window.core.Version this$0
androidx.window.layout.SidecarAdapter$Companion: int getRawSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState)
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
com.google.android.gms.internal.firebase-auth-api.zzlm: int zze
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: int label
com.google.android.gms.internal.measurement.zzgj: int zzf
androidx.window.layout.SidecarCompat
com.google.android.gms.internal.measurement.zzgx: com.google.android.gms.internal.measurement.zzgx zza
androidx.window.layout.ExtensionInterfaceCompat
com.google.android.gms.internal.firebase-auth-api.zzjg
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.jvm.internal.FunctionReference: boolean isSuspend()
kotlinx.coroutines.DefaultExecutor: int debugStatus
com.onesignal.ADMMessageHandler
com.google.android.gms.internal.measurement.zzgc: long zzN
androidx.window.embedding.EmbeddingBackend: void registerSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
android.support.v4.media.session.PlaybackStateCompat
androidx.window.embedding.SplitRule: boolean equals(java.lang.Object)
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetricsCalculator$Companion Companion
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List)
com.google.android.gms.internal.firebase-auth-api.zziq: com.google.android.gms.internal.firebase-auth-api.zzyj zzh
kotlinx.coroutines.internal.AtomicOp
androidx.fragment.app.FragmentContainerView: void setDrawDisappearingViewsLast(boolean)
io.flutter.embedding.engine.FlutterJNI: void onBeginFrame()
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityHeading(android.view.View,boolean)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
kotlin.jvm.internal.CallableReference: java.lang.String name
com.google.android.gms.internal.firebase-auth-api.zziq: com.google.android.gms.internal.firebase-auth-api.zzik zzf
androidx.window.core.Bounds: int left
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
com.google.android.gms.internal.firebase-auth-api.zzhw
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzik
androidx.window.layout.SidecarCompat: androidx.window.sidecar.SidecarInterface sidecar
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryNotLowProxy
io.flutter.view.AccessibilityViewEmbedder: java.util.Map embeddedViewToDisplayBounds
com.onesignal.JobIntentService$CompatWorkItem: com.onesignal.JobIntentService this$0
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setSessionTimeoutDuration(long)
androidx.core.view.ViewCompat$Api28Impl: void setScreenReaderFocusable(android.view.View,boolean)
com.google.android.gms.internal.measurement.zzgc: long zzx
com.google.android.gms.internal.measurement.zzfo: com.google.android.gms.internal.measurement.zzfo zza
io.flutter.plugins.GeneratedPluginRegistrant
com.google.android.gms.safetynet.zza: android.os.Parcelable$Creator CREATOR
com.google.firebase.auth.FirebaseAuthRegistrar
androidx.window.core.Bounds: java.lang.String toString()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getMaxUserProperties(java.lang.String,com.google.android.gms.internal.measurement.zzcf)
io.flutter.embedding.engine.FlutterJNI: java.lang.String observatoryUri
androidx.work.impl.workers.ConstraintTrackingWorker
androidx.core.view.ViewCompat$Api19Impl: int getAccessibilityLiveRegion(android.view.View)
com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform: com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform[] values()
androidx.core.view.ViewCompat$Api21Impl: float getTranslationZ(android.view.View)
androidx.core.app.ComponentActivity: ComponentActivity()
androidx.window.layout.SidecarAdapter$Companion: void setSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo,java.util.List)
com.google.android.gms.internal.measurement.zzfw
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
androidx.cardview.widget.CardView: float getRadius()
kotlinx.coroutines.internal.LockFreeTaskQueue
androidx.window.embedding.EmbeddingAdapter: java.lang.Object component2(android.util.Pair)
com.google.android.gms.common.internal.MethodInvocation: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgl: java.lang.String zzh
androidx.appcompat.widget.AppCompatSpinner$SavedState: android.os.Parcelable$Creator CREATOR
io.flutter.view.AccessibilityViewEmbedder: java.lang.String TAG
androidx.core.view.ViewCompat$Api31Impl: java.lang.String[] getReceiveContentMimeTypes(android.view.View)
androidx.window.embedding.ExtensionEmbeddingBackend
com.google.android.gms.internal.firebase-auth-api.zzkr: java.lang.String zze
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: java.util.Map registeredPlugins
com.google.android.gms.common.api.internal.LifecycleCallback
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
androidx.window.embedding.EmbeddingCompat$Companion: java.lang.Integer getExtensionApiLevel()
androidx.window.layout.WindowInfoTrackerImpl: int BUFFER_CAPACITY
androidx.window.core.Bounds
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.google.android.gms.internal.firebase-auth-api.zzjd: com.google.android.gms.internal.firebase-auth-api.zzyj zzg
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver: AlarmManagerSchedulerBroadcastReceiver()
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
com.google.firebase.analytics.FirebaseAnalytics: com.google.android.gms.measurement.internal.zziq getScionFrontendApiImplementation(android.content.Context,android.os.Bundle)
androidx.media.AudioAttributesImplBase: AudioAttributesImplBase()
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
com.google.firebase.datatransport.TransportRegistrar
com.google.android.gms.internal.measurement.zzfm: java.lang.String zzl
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mCreationTimestamp
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
com.google.android.gms.common.data.DataHolder: android.os.Parcelable$Creator CREATOR
androidx.cardview.widget.CardView: boolean getUseCompatPadding()
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
androidx.window.layout.SidecarAdapter: java.lang.String access$getTAG$cp()
com.google.android.gms.internal.measurement.zzfc: int zzi
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDisplayFeature(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDisplayFeature)
io.flutter.view.AccessibilityViewEmbedder: AccessibilityViewEmbedder(android.view.View,int)
com.onesignal.JobIntentService$CompatWorkEnqueuer: android.content.Context mContext
androidx.work.InputMerger: InputMerger()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable compute()
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept(java.util.List)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
com.google.android.gms.internal.measurement.zzgc: java.lang.String zzw
androidx.window.embedding.MatcherUtils: boolean sDebugMatchers
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: ImeSyncDeferringInsetsCallback$AnimationCallback(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.window.layout.WindowInfoTracker$Companion: WindowInfoTracker$Companion()
androidx.window.embedding.SplitRule$Api30Impl
io.flutter.embedding.engine.FlutterJNI: void onDisplayOverlaySurface(int,int,int,int,int)
com.google.android.gms.internal.measurement.zzfi: java.lang.String zzf
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType valueOf(java.lang.String)
com.google.android.gms.internal.firebase-auth-api.zzjr
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.google.android.gms.internal.measurement.zzga: com.google.android.gms.internal.measurement.zzkj zze
androidx.core.view.ViewCompat$Api21Impl: boolean isImportantForAccessibility(android.view.View)
io.flutter.view.AccessibilityViewEmbedder: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
com.google.firebase.messaging.RemoteMessage: android.os.Parcelable$Creator CREATOR
com.onesignal.JobIntentService$ComponentNameWithWakeful
androidx.core.widget.PopupWindowCompat$Api19Impl: void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceCreated(long,android.view.Surface)
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
androidx.core.view.ViewCompat$Api17Impl: int getLayoutDirection(android.view.View)
androidx.appcompat.view.menu.ActionMenuItemView
com.google.android.gms.internal.firebase-auth-api.zzin: com.google.android.gms.internal.firebase-auth-api.zzyj zzg
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.widget.NestedScrollView: int getScrollRange()
com.google.android.gms.internal.firebase-auth-api.zzhe: int zze
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void setLastInfo(java.util.List)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback animationCallback
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] values()
com.google.android.gms.internal.measurement.zzfo: int zzf
com.google.android.gms.internal.firebase-auth-api.zznz: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
io.flutter.view.AccessibilityViewEmbedder: android.view.View rootAccessibilityView
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type type
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
androidx.core.view.ViewCompat$Api21Impl: boolean isNestedScrollingEnabled(android.view.View)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix finalMatrix
com.google.android.gms.internal.measurement.zzfs: int zzj
androidx.appcompat.widget.AbsActionBarView: void setContentHeight(int)
com.google.firebase.auth.internal.zzbb: android.os.Parcelable$Creator CREATOR
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: java.lang.String[] computePlatformResolvedLocale(java.lang.String[])
com.onesignal.JobIntentService$ComponentNameWithWakeful: android.content.ComponentName componentName
kotlinx.coroutines.CancelledContinuation: int _resumed
com.onesignal.JobIntentService$CompatWorkItem: android.content.Intent getIntent()
com.google.android.gms.internal.measurement.zzfa: com.google.android.gms.internal.measurement.zzkj zzg
com.google.android.gms.internal.measurement.zzeh: boolean zzi
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
com.google.android.gms.internal.firebase-auth-api.zzlj
androidx.window.embedding.ActivityRule
androidx.window.core.Bounds: int getBottom()
androidx.startup.InitializationProvider: InitializationProvider()
com.onesignal.ADMMessageHandlerJob: ADMMessageHandlerJob()
com.onesignal.OSSMSSubscriptionChangedInternalObserver
androidx.lifecycle.LiveData$LifecycleBoundObserver
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void attachToGLContext(int)
kotlinx.coroutines.channels.AbstractChannel
com.google.android.gms.internal.firebase-auth-api.zzxj: android.os.Parcelable$Creator CREATOR
com.onesignal.HmsMessageServiceOneSignal: HmsMessageServiceOneSignal()
com.google.android.gms.internal.measurement.zzfm: int zze
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
com.google.firebase.auth.internal.zzae: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.EmbeddingCompat$Companion
androidx.window.embedding.SplitRule: boolean checkParentMetrics(android.view.WindowMetrics)
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
kotlin.jvm.internal.CallableReference: java.lang.String signature
kotlinx.coroutines.scheduling.LimitingDispatcher
com.google.android.gms.internal.firebase-auth-api.zzkf
androidx.core.widget.PopupWindowCompat$Api23Impl: void setWindowLayoutType(android.widget.PopupWindow,int)
com.google.android.gms.common.SupportErrorDialogFragment
androidx.window.layout.WindowMetricsCalculator$Companion: kotlin.jvm.functions.Function1 decorator
com.google.android.gms.internal.measurement.zzfs: com.google.android.gms.internal.measurement.zzfs zza
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
com.google.android.gms.internal.measurement.zzgc: int zzL
com.google.android.gms.common.api.GoogleApiActivity
com.google.firebase.messaging.FirebaseMessagingRegistrar
androidx.window.embedding.SplitPairRule: SplitPairRule(java.util.Set,boolean,boolean,boolean,int,int,float,int)
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode[] values()
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View)
com.google.android.gms.internal.measurement.zzej: int zzf
com.google.android.gms.internal.measurement.zzgc: com.google.android.gms.internal.measurement.zzkj zzH
com.google.android.gms.internal.firebase-auth-api.zzjr: int zzf
com.onesignal.JobIntentService$JobWorkEnqueuer
com.onesignal.OSUtils: boolean opaqueHasClass(java.lang.Class)
com.onesignal.FCMBroadcastReceiver: FCMBroadcastReceiver()
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver
com.google.android.gms.auth.api.credentials.Credential: android.os.Parcelable$Creator CREATOR
androidx.window.layout.DisplayCompatHelperApi17
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalCacheDirs(android.content.Context)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
com.google.android.gms.internal.measurement.zzgx: boolean zzj
androidx.work.WorkerParameters
androidx.core.graphics.drawable.IconCompat: IconCompat()
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
com.onesignal.OSTrigger$OSTriggerKind: com.onesignal.OSTrigger$OSTriggerKind valueOf(java.lang.String)
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackName
com.google.android.gms.internal.measurement.zzgc: long zzy
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason[] values()
com.google.android.gms.internal.firebase-auth-api.zzht: int zzf
androidx.core.app.AppOpsManagerCompat$Api29Impl: android.app.AppOpsManager getSystemService(android.content.Context)
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
androidx.core.view.ViewCompat$Api16Impl: int getWindowSystemUiVisibility(android.view.View)
androidx.window.embedding.MatcherUtils: androidx.window.embedding.MatcherUtils INSTANCE
androidx.window.embedding.EmbeddingAdapter: java.util.Set translate(java.util.Set)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1
androidx.window.layout.HardwareFoldingFeature$Companion
androidx.lifecycle.ViewModel: ViewModel()
androidx.window.R$styleable: int SplitPairFilter_secondaryActivityName
androidx.media.AudioAttributesCompatParcelizer: void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel)
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
io.flutter.embedding.engine.FlutterJNI: void loadDartDeferredLibrary(int,java.lang.String[])
androidx.window.layout.DisplayCompatHelperApi17: androidx.window.layout.DisplayCompatHelperApi17 INSTANCE
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mExpiredEventName
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
androidx.window.embedding.SplitController: void addSplitListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
kotlinx.coroutines.internal.LockFreeLinkedListHead
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
com.google.android.gms.internal.firebase-auth-api.zzlb
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
androidx.window.layout.SidecarAdapter: java.util.List translate(java.util.List,androidx.window.sidecar.SidecarDeviceState)
com.google.android.gms.internal.firebase-auth-api.zzjg: com.google.android.gms.internal.firebase-auth-api.zzjj zze
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State HALF_OPENED
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
com.onesignal.JobIntentService$WorkEnqueuer: void serviceStartReceived()
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness valueOf(java.lang.String)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetRight(android.view.DisplayCutout)
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mName
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
com.google.android.gms.internal.firebase-auth-api.zzgg: int zze
androidx.window.core.Bounds: int getHeight()
androidx.window.R$styleable: int SplitPairFilter_secondaryActivityAction
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
androidx.window.layout.SidecarCompat$FirstAttachAdapter: java.lang.ref.WeakReference activityWeakReference
androidx.core.view.ViewCompat$Api28Impl: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
androidx.window.embedding.ExtensionEmbeddingBackend: void setEmbeddingExtension(androidx.window.embedding.EmbeddingInterfaceCompat)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
com.google.android.gms.measurement.internal.zzah: com.google.android.gms.measurement.internal.zzah[] values()
androidx.window.embedding.EmbeddingRule
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryChargingProxy: ConstraintProxy$BatteryChargingProxy()
com.google.android.gms.internal.firebase-auth-api.zzih
com.google.firebase.auth.FirebaseAuthRegistrar: com.google.firebase.auth.FirebaseAuth lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
com.google.android.gms.internal.measurement.zzgl: com.google.android.gms.internal.measurement.zzgl zza
com.google.android.gms.internal.measurement.zzej: boolean zzl
androidx.window.layout.SidecarCompat$DistinctElementCallback
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
com.google.android.gms.internal.firebase-auth-api.zzka
com.google.android.gms.internal.measurement.zzes: java.lang.String zzg
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTriggeredEventName
com.google.android.gms.measurement.AppMeasurement: java.lang.String getCurrentScreenClass()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: androidx.core.util.Consumer $consumer$inlined
androidx.window.embedding.ExtensionEmbeddingBackend: void setSplitRules(java.util.Set)
androidx.window.core.Bounds: int getWidth()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
androidx.window.layout.WindowMetricsCalculatorCompat: WindowMetricsCalculatorCompat()
com.google.android.gms.internal.firebase-auth-api.zzvt: com.google.android.gms.internal.firebase-auth-api.zzvt[] values()
androidx.appcompat.widget.Toolbar
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
androidx.core.widget.PopupWindowCompat$Api23Impl: void setOverlapAnchor(android.widget.PopupWindow,boolean)
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver
com.google.android.gms.internal.measurement.zzgc: java.lang.String zzab
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.gms.internal.firebase-auth-api.zzle: com.google.android.gms.internal.firebase-auth-api.zzkf zzf
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getFOLD$cp()
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery: TransportBackendDiscovery()
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController access$getGlobalInstance$cp()
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mTimedOutEventParams
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
io.flutter.embedding.engine.FlutterJNI: boolean initCalled
kotlin.jvm.internal.CallableReference: java.lang.Object NO_RECEIVER
androidx.window.embedding.SplitRule: int getMinSmallestWidth()
androidx.window.core.Version: androidx.window.core.Version access$getUNKNOWN$cp()
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
kotlinx.coroutines.LazyStandaloneCoroutine
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] values()
io.flutter.view.FlutterCallbackInformation
com.google.android.gms.internal.firebase-auth-api.zzkm: int zzh
androidx.core.view.ViewCompat$Api31Impl: void setOnReceiveContentListener(android.view.View,java.lang.String[],androidx.core.view.OnReceiveContentListener)
androidx.window.layout.WindowInfoTracker$Companion: java.lang.String TAG
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection valueOf(java.lang.String)
com.google.firebase.analytics.FirebaseAnalytics
com.google.firebase.datatransport.TransportRegistrar: TransportRegistrar()
com.google.firebase.messaging.FirebaseMessagingService: FirebaseMessagingService()
androidx.activity.ComponentActivity: void setContentView(android.view.View)
io.flutter.plugins.urllauncher.WebViewActivity
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor
androidx.core.view.ViewCompat$Api21Impl: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState detachState()
androidx.window.core.Version: boolean equals(java.lang.Object)
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode valueOf(java.lang.String)
com.onesignal.OSInAppMessageAction$OSInAppMessageActionUrlType: com.onesignal.OSInAppMessageAction$OSInAppMessageActionUrlType[] values()
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: java.lang.Object invoke(java.lang.Object)
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingCompat$Companion Companion
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$Orientation getOrientation()
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State[] values()
androidx.work.NetworkType: androidx.work.NetworkType[] values()
com.onesignal.NotificationDismissReceiver
com.onesignal.shortcutbadger.impl.AsusHomeBadger
androidx.window.core.Version$bigInteger$2: java.math.BigInteger invoke()
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] values()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] values()
com.google.android.gms.internal.firebase-auth-api.zzgy: int zzf
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
com.google.android.gms.cloudmessaging.CloudMessage: android.os.Parcelable$Creator CREATOR
androidx.window.java.R: R()
androidx.window.layout.SidecarCompat$TranslatingCallback: SidecarCompat$TranslatingCallback(androidx.window.layout.SidecarCompat)
androidx.window.layout.EmptyDecorator
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
com.google.android.gms.internal.measurement.zzga
com.google.android.gms.internal.measurement.zzej: java.lang.String zzg
com.google.android.gms.internal.firebase-auth-api.zzjr: int zzg
androidx.window.layout.SidecarAdapter$Companion
com.onesignal.OneSignal$EmailErrorType: com.onesignal.OneSignal$EmailErrorType[] values()
com.google.android.gms.internal.measurement.zzfe: com.google.android.gms.internal.measurement.zzfe zza
androidx.window.layout.WindowMetrics: int hashCode()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.gms.internal.firebase-auth-api.zzle: com.google.android.gms.internal.firebase-auth-api.zzle zzb
com.google.android.gms.internal.measurement.zzgl: float zzj
com.google.android.gms.internal.measurement.zzfm: java.lang.String zzk
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] values()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
com.google.android.gms.internal.measurement.zzeh: com.google.android.gms.internal.measurement.zzkj zzh
com.onesignal.SyncJobService: SyncJobService()
androidx.window.core.Version$Companion: androidx.window.core.Version getCURRENT()
androidx.window.embedding.SplitPairFilter: java.lang.String toString()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: androidx.window.layout.WindowInfoTracker tracker
com.google.android.gms.common.internal.GetServiceRequest: android.os.Parcelable$Creator CREATOR
kotlin.jvm.internal.FunctionReference: boolean isInline()
com.onesignal.SyncService
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
androidx.window.embedding.ActivityStack: java.util.List activities
com.google.android.gms.internal.firebase-auth-api.zzju: com.google.android.gms.internal.firebase-auth-api.zzju zzb
androidx.window.embedding.EmbeddingTranslatingCallback: EmbeddingTranslatingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface,androidx.window.embedding.EmbeddingAdapter)
androidx.media.AudioAttributesImplApi21: AudioAttributesImplApi21()
com.onesignal.shortcutbadger.impl.SamsungHomeBadger: SamsungHomeBadger()
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarAdapter sidecarAdapter
androidx.window.embedding.EmbeddingBackend: boolean isSplitSupported()
com.google.android.gms.measurement.AppMeasurement: long generateEventId()
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
androidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode valueOf(java.lang.String)
androidx.window.core.Version$bigInteger$2
com.google.android.gms.internal.measurement.zzes
androidx.room.RoomDatabase: RoomDatabase()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: ExtensionWindowLayoutInfoBackend$MulticastConsumer(android.app.Activity)
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarCompat$Companion Companion
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
androidx.window.core.Version: java.lang.String description
com.google.android.gms.internal.measurement.zzgc: long zzm
androidx.window.R$styleable: int[] SplitPairFilter
androidx.window.embedding.EmbeddingAdapter: java.util.List translate(java.util.List)
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] values()
com.google.android.gms.internal.measurement.zzfm: com.google.android.gms.internal.measurement.zzfm zza
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mTriggeredEventParams
kotlinx.coroutines.JobImpl
com.google.android.gms.internal.measurement.zzfs: int zze
androidx.window.layout.WindowMetricsCalculator$Companion: WindowMetricsCalculator$Companion()
androidx.window.layout.SidecarCompat$Companion
io.flutter.embedding.engine.FlutterJNI: java.util.concurrent.locks.ReentrantReadWriteLock shellHolderLock
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker
androidx.window.embedding.EmbeddingAdapter: boolean translateParentMetricsPredicate$lambda-4(androidx.window.embedding.SplitRule,android.view.WindowMetrics)
androidx.activity.result.ActivityResultRegistry$1
com.google.android.gms.internal.firebase-auth-api.zzkf: java.lang.String zze
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: androidx.window.layout.WindowLayoutInfo lastKnownValue
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.lifecycle.SingleGeneratedAdapterObserver
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void unregisterOnMeasurementEventListener(com.google.android.gms.internal.measurement.zzci)
androidx.window.layout.WindowInfoTrackerDecorator
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
com.google.android.gms.internal.firebase-auth-api.zzka: java.lang.String zze
com.google.android.gms.internal.measurement.zzgc: com.google.android.gms.internal.measurement.zzkj zzaf
androidx.window.R$styleable
com.google.android.gms.internal.measurement.zzfc: boolean zzh
androidx.core.view.ViewCompat$Api30Impl: void setStateDescription(android.view.View,java.lang.CharSequence)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable computeReflected()
androidx.work.ListenableWorker
com.google.android.gms.internal.firebase-auth-api.zzpl: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer callback
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable getReflected()
androidx.window.embedding.EmbeddingBackend: void unregisterRule(androidx.window.embedding.EmbeddingRule)
com.google.android.gms.internal.measurement.zzgx: java.lang.String zzi
com.google.android.gms.internal.measurement.zzfm: java.lang.String zzg
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] values()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifier(int)
androidx.window.layout.WindowMetrics: WindowMetrics(android.graphics.Rect)
com.google.android.gms.internal.measurement.zzgc: com.google.android.gms.internal.measurement.zzfy zzad
androidx.window.R$styleable: int[] ActivityRule
com.google.android.gms.internal.firebase-auth-api.zzjg: com.google.android.gms.internal.firebase-auth-api.zzjg zzb
com.google.android.gms.signin.internal.zai: android.os.Parcelable$Creator CREATOR
androidx.work.impl.background.systemalarm.RescheduleReceiver: RescheduleReceiver()
androidx.window.embedding.EmbeddingBackend: void setSplitRules(java.util.Set)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchEmptyPlatformMessage(long,java.lang.String,int)
androidx.window.layout.ActivityCompatHelperApi24
kotlin.jvm.internal.CallableReference: java.lang.String getSignature()
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
androidx.window.embedding.ActivityFilter: boolean matchesIntent(android.content.Intent)
androidx.appcompat.view.menu.ListMenuItemView
com.google.android.gms.internal.measurement.zzga: com.google.android.gms.internal.measurement.zzga zza
androidx.appcompat.widget.AbsActionBarView: void setVisibility(int)
androidx.window.embedding.EmbeddingInterfaceCompat
com.google.android.gms.internal.measurement.zzex
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType: com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType valueOf(java.lang.String)
